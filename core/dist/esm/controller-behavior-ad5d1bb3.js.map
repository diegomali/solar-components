{"file":"controller-behavior-ad5d1bb3.js","mappings":"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","names":[],"sources":["./src/behaviors/controller-behavior/delegates/native-delegate.ts","./src/behaviors/controller-behavior/controller-behavior.ts"],"sourcesContent":["import { HTMLStencilElement } from '@stencil/core/internal';\r\nimport { FrameworkDelegate } from './framework-delegate';\r\n\r\n/**\r\n * The default framework delegate.\r\n */\r\nexport class NativeDelegate implements FrameworkDelegate {\r\n  createComponent<E extends HTMLStencilElement>(tag: string, options): E {\r\n    const { component, componentProps, ...props } = options;\r\n\r\n    const element = document.createElement(tag) as E;\r\n    if (props) {\r\n      Object.keys(props).forEach(key => {\r\n        if (typeof props[key] === 'string') {\r\n          element.setAttribute(key, props[key]);\r\n        } else {\r\n          element[key] = props[key];\r\n        }\r\n      });\r\n    }\r\n\r\n    if (component) {\r\n      if (typeof component === 'string') {\r\n        element.innerHTML = component;\r\n      } else {\r\n        // The component is a HTMLElement:\r\n        if (componentProps) {\r\n          Object.assign(component, componentProps);\r\n        }\r\n        element.appendChild(component);\r\n      }\r\n    }\r\n\r\n    return element;\r\n  }\r\n\r\n  async attachViewToDom(domRoot: HTMLElement, element) {\r\n    domRoot.appendChild(element);\r\n    await element.componentOnReady();\r\n  }\r\n\r\n  // @ts-ignore\r\n  detachViewFromDom(element: any, props): Promise<void> {\r\n      return element.remove();\r\n  }\r\n}\r\n\r\nexport const nativeDelegate = new NativeDelegate();\r\n","import { VNode } from '@stencil/core';\r\nimport { HTMLStencilElement } from '@stencil/core/internal';\r\n\r\nimport { FieldsOf } from '../../utils/lang/types';\r\nimport { ComponentBase, ComponentBehavior } from '../../utils/stencil/component-behavior';\r\n\r\nimport { FrameworkDelegate } from './delegates/framework-delegate';\r\nimport { nativeDelegate } from './delegates/native-delegate';\r\n\r\n/**\r\n * Used to implement a Controller Component logic.\r\n * A controller component is a singleton that can make operations in a context of all the layout,\r\n * breaking the atomic design.\r\n * Use it to create modals, toasts, floating panels etc.\r\n * This was based on the abstraction from Ionic Team.\r\n */\r\nexport class ControllerBehavior<C, E extends HTMLStencilElement> extends ComponentBehavior<ControllerComponent<C, E>> {\r\n  /**\r\n   * The element that it is bounded.\r\n   */\r\n  root: HTMLElement;\r\n\r\n  /**\r\n   * Bound the controller to the provided bound or to the parentElement.\r\n   */\r\n  attach() {\r\n    this.root = document.querySelector(this.component.bound) || this.component.host.parentElement;\r\n  }\r\n\r\n  /**\r\n   * Clear the controller before unload.\r\n   */\r\n  detach(): Promise<any> | void {\r\n    // @ts-ignore\r\n    return this.component.dismissAll ? this.component.dismissAll() : null;\r\n  }\r\n\r\n  /**\r\n   * Create a new element by the Controller's managed target and append it to the bound parent.\r\n   * @param options The properties based on the target component.\r\n   * @param customDelegate A custom DOM api used to attach the component.\r\n   */\r\n  async create(\r\n    options: ControllerComponentOptions<C>,\r\n    customDelegate?: FrameworkDelegate\r\n  ): Promise<E & HTMLStencilControlledElement<C, E>> {\r\n\r\n    const { wrapper, render, ...props } = options;\r\n    const delegate = customDelegate || nativeDelegate;\r\n\r\n    if (render) {\r\n      // Using a portal\r\n      return new Promise(res => {\r\n        wrapper.vchildren = render({ ref: res, Tag: this.component.target });\r\n        this.root.appendChild(wrapper);\r\n      });\r\n    } else {\r\n      // Using delegate\r\n      const element =\r\n        await delegate.createComponent<E & HTMLStencilControlledElement<C, E>>(this.component.target, props);\r\n\r\n      element.controller = this.component;\r\n      element._resolveDismiss = null;\r\n      element._resolveWillDismiss = null;\r\n      element.onDidDismiss = () => new Promise(res => element._resolveDismiss = res);\r\n      element.onWillDismiss = () => new Promise(res => element._resolveWillDismiss = res);\r\n      element.dismiss = async data => {\r\n        let canDismiss = true;\r\n        if (this.component.willDismissComponent) {\r\n          canDismiss = await this.component.willDismissComponent(element, data);\r\n        }\r\n        if (canDismiss) {\r\n          if (element._resolveWillDismiss) {\r\n            await element._resolveWillDismiss(data);\r\n          }\r\n          if (wrapper) {\r\n            await delegate.detachViewFromDom(wrapper, props);\r\n          } else {\r\n            await delegate.detachViewFromDom(element, props);\r\n          }\r\n          if (element._resolveDismiss) {\r\n            await element._resolveDismiss(data);\r\n          }\r\n        }\r\n      };\r\n\r\n      if (wrapper) {\r\n        wrapper.appendChild(element);\r\n        await delegate.attachViewToDom(this.root, wrapper);\r\n      } else {\r\n        await delegate.attachViewToDom(this.root, element);\r\n      }\r\n\r\n      return element;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Represents a Controller Component that will manage to create a new target component.\r\n */\r\nexport interface ControllerComponent<C, E extends HTMLStencilElement> extends ComponentBase {\r\n  /**\r\n   * The instance of this behaviour.\r\n   */\r\n  controllerBehavior: ControllerBehavior<C, E>;\r\n\r\n  /**\r\n   * The tag of the component that will be managed.\r\n   */\r\n  target: string;\r\n\r\n  /**\r\n   * An optional property used to refer the parent element that the component will be attached to.\r\n   * @Prop\r\n   */\r\n  bound: string;\r\n\r\n  /**\r\n   * Set properties to the managed component.\r\n   * @Method\r\n   */\r\n  create(props: ControllerComponentOptions<C>): Promise<E & HTMLStencilControlledElement<C, E>>;\r\n\r\n  /**\r\n   * Clear properties of the managed component.\r\n   * @Method\r\n   */\r\n  dismiss(data?: any): Promise<void>;\r\n\r\n  willDismissComponent?(element: E & HTMLStencilControlledElement<C, E>, data?: any): Promise<boolean>;\r\n}\r\n\r\n/**\r\n * Represents the custom props that can be passed to a controlled component.\r\n */\r\nexport type ControllerComponentOptions<C> = FieldsOf<C> & {\r\n  component?: any;\r\n  componentProps?: any;\r\n  wrapper?: any;\r\n  render?: (data) => VNode;\r\n  [key: string]: any;\r\n};\r\n\r\nexport interface ControlledElementFields {\r\n  onDidDismiss?: <T>() => Promise<T>;\r\n  onWillDismiss?: <T>() => Promise<T>;\r\n  dismiss?: (data: any) => Promise<void>;\r\n  present?: () => Promise<void>;\r\n}\r\n\r\n/**\r\n * Represents a Component that was created by a Controller.\r\n */\r\nexport type HTMLStencilControlledElement<C, E extends HTMLStencilElement> = E & ControlledElementFields & {\r\n  _resolveDismiss: (data) => void;\r\n  _resolveWillDismiss: (data) => void;\r\n  controller: ControllerComponent<C, E>;\r\n};\r\n"],"version":3}