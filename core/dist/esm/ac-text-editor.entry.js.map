{"file":"ac-text-editor.entry.js","mappings":";;;;;;;AAAA;;;AAIO,MAAM,iBAAiB,GAAI,gFAAgF;;ACJlH,MAAM,eAAe,GAAG,27QAA27Q;;;;;;;;;;;;MCWt8Q,YAAY;;;;;;IAUvB,sBAAiB,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC;;;;;;iBAkCf,EAAE;uBAKb,EAAE;;;EAIxB,gBAAgB;IACd,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,GAAG;;MAExB,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,CAAC,2BAA2B,EAAE;QACvD,OAAO,EAAE;UACP,OAAO,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC;SAC/D;QACD,WAAW,EAAE;UACX,IAAI,EAAE,IAAI,CAAC,WAAW;SACvB;QACD,MAAM,EAAE;UACN,eAAe,EAAE,MAAM;SACxB;OACF,CAAC,CAAC;MAEH,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,eAAe,EAAE;QAC3C,IAAI,CAAC,YAAY,EAAE,CAAC;OACrB,CAAC,CAAC;KACJ,CAAC,CAAC;IAEH,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;GACvC;EAED,oBAAoB;GACnB;EAEO,UAAU;IAChB,OAAO,IAAI,OAAO,CAAC,GAAG;MACpB,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;MACjD,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;MAChD,OAAO,CAAC,YAAY,CAAC,KAAK,EAAE,iBAAiB,CAAC,CAAC;MAC/C,OAAO,CAAC,MAAM,GAAG,MAAM,GAAG,CAAE,MAAc,CAAC,YAAY,CAAC,CAAC;MACxD,OAAe,CAAC,kBAAkB,GAAG,MAAM,GAAG,CAAE,MAAc,CAAC,YAAY,CAAC,CAAC;MAC9E,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;KACpC,CAAC,CAAC;GACJ;EAGD,WAAW;IACT,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;GACtB;EAGD,UAAU;IACR,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;GACvB;EAGD,YAAY;IACV,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;GACvC;EAED,MAAM;IACJ,QACE,EAAC,IAAI,IACH,KAAK,EAAE;QACL,uBAAuB,EAAE,IAAI,CAAC,QAAQ;OACvC,IAED,WACE,GAAG,EAAE,SAAS,IAAI,IAAI,CAAC,SAAS,GAAG,SAA2B,EAC9D,KAAK,EAAC,0BAA0B,EAChC,OAAO,EAAE,IAAI,CAAC,WAAW,EACzB,MAAM,EAAE,IAAI,CAAC,UAAU,EACvB,QAAQ,EAAE,IAAI,CAAC,YAAY,GAC3B,EACF,aACE,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,IAAI,EAAC,QAAQ,GACb,CACG,EACR;GACF;;;AAnCD;EADC,IAAI;+CAGJ;AAGD;EADC,IAAI;8CAGJ;AAGD;EADC,IAAI;gDAGJ;;;;;","names":[],"sources":["./src/vendors-cdn.ts","./src/components/molecules/ac-text-editor/ac-text-editor.scss?tag=ac-text-editor","./src/components/molecules/ac-text-editor/ac-text-editor.tsx"],"sourcesContent":["/**\r\n * Link referring to the javascript Medium-Editor plugin cnd.\r\n */\r\n\r\nexport const MEDIUM_EDITOR_CDN  = 'https://cdn.jsdelivr.net/npm/medium-editor@5.23.3/dist/js/medium-editor.min.js';\r\n","@import \"../../../theme/variables\";\r\n@import \"medium-editor-css/ac-text-editor.default\";\r\n@import \"medium-editor-css/ac-text-editor.theme\";\r\n@import \"ac-text-editor.theme\";\r\n\r\n// ---------------------------------------------------------------------------------------------------------------------\r\n// General Style\r\n// ---------------------------------------------------------------------------------------------------------------------\r\n\r\nac-text-editor {\r\n  display: block;\r\n  max-height: 300px;\r\n  min-height: 300px;\r\n  width: 100%;\r\n  border: 2px solid var-color(\"neutral\", \"light\");\r\n  border-radius: $border-radius-default;\r\n  background-color: var-color(\"neutral\", \"contrast\");\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border-color: var-color(\"primary\", \"normal\");;\r\n  }\r\n\r\n  .ac-text-editor__editable {\r\n    width: 100%;\r\n    max-height: 300px;\r\n    min-height: 300px;\r\n    padding: 8px;\r\n\r\n    & p {\r\n      margin-block-start: 0;\r\n    }\r\n\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n}\r\n// ---------------------------------------------------------------------------------------------------------------------\r\n// Focus\r\n// ---------------------------------------------------------------------------------------------------------------------\r\n\r\nac-text-editor.ac-text-editor--focus {\r\n  border-color: var-color(\"primary\", \"normal\");\r\n}\r\n","import { Component, Element, Host, Prop, State, h } from '@stencil/core';\r\n\r\nimport { FormFieldBehavior, FormFieldComponent } from '../../../behaviors/form-behavior';\r\nimport { Bind } from '../../../utils/lang/bind';\r\nimport { CustomValidityState, ValidatorFn } from '../../../utils/validations/validations';\r\nimport { MEDIUM_EDITOR_CDN } from '../../../vendors-cdn';\r\n\r\n@Component({\r\n  tag: 'ac-text-editor',\r\n  styleUrl: 'ac-text-editor.scss'\r\n})\r\nexport class AcTextEditor implements FormFieldComponent {\r\n  // @ts-ignore\r\n  private mediumEditor: any;\r\n  private mediumRef: HTMLDivElement;\r\n\r\n  @Element() host: HTMLAcTextEditorElement;\r\n\r\n  /**\r\n   * The FormFieldBehavior instance.\r\n   */\r\n  formFieldBehavior = new FormFieldBehavior(this);\r\n\r\n  /**\r\n   * Get the last validity state from the checkValidity.\r\n   */\r\n  @Prop({ mutable: true }) validity: CustomValidityState;\r\n\r\n  /**\r\n   * The validations that this field need.\r\n   * This validations are checked on:\r\n   * - Blur event\r\n   * - Form submit event\r\n   * - Each keyUp event ONLY IF the validateOnKeyup property is present.\r\n   */\r\n  @Prop({ mutable: true }) validator: ValidatorFn | ValidatorFn[];\r\n\r\n  /**\r\n   * The native HTMLInputElement required attribute.\r\n   */\r\n  @Prop({ mutable: true }) required: boolean;\r\n\r\n  /**\r\n   * The disabled mode.\r\n   */\r\n  @Prop({ mutable: true }) disabled: boolean;\r\n\r\n  /**\r\n   * The HTML input field's name.\r\n   */\r\n  @Prop() name: string;\r\n\r\n  /**\r\n   * The value of the internal text editor.\r\n   */\r\n  @Prop({ mutable: true }) value = '';\r\n\r\n  /**\r\n   * The placeholder of text editor.\r\n   */\r\n  @Prop() placeholder = '';\r\n\r\n  @State() hasFocus: boolean;\r\n\r\n  componentDidLoad() {\r\n    this.loadMedium().then(res => {\r\n      // @ts-ignore\r\n      this.mediumEditor = new res('.ac-text-editor__editable', {\r\n        toolbar: {\r\n          buttons: ['bold', 'italic', 'underline', 'anchor', 'h2', 'h3']\r\n        },\r\n        placeholder: {\r\n          text: this.placeholder\r\n        },\r\n        anchor: {\r\n          placeholderText: 'Link',\r\n        }\r\n      });\r\n\r\n      this.mediumEditor.subscribe('editableInput', () => {\r\n        this.handleChange();\r\n      });\r\n    });\r\n\r\n    this.mediumRef.innerHTML = this.value;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n  }\r\n\r\n  private loadMedium() {\r\n    return new Promise(res => {\r\n      const element = document.createElement('script');\r\n      element.setAttribute('type', 'text/javascript');\r\n      element.setAttribute('src', MEDIUM_EDITOR_CDN);\r\n      element.onload = () => res((window as any).MediumEditor);\r\n      (element as any).onreadystatechange = () => res((window as any).MediumEditor);\r\n      document.head.appendChild(element);\r\n    });\r\n  }\r\n\r\n  @Bind\r\n  handleFocus() {\r\n    this.hasFocus = true;\r\n  }\r\n\r\n  @Bind\r\n  handleBlur() {\r\n    this.hasFocus = false;\r\n  }\r\n\r\n  @Bind\r\n  handleChange() {\r\n    this.value = this.mediumRef.innerHTML;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host\r\n        class={{\r\n          'ac-text-editor--focus': this.hasFocus\r\n        }}\r\n      >\r\n        <div\r\n          ref={mediumRef => this.mediumRef = mediumRef as HTMLDivElement}\r\n          class=\"ac-text-editor__editable\"\r\n          onFocus={this.handleFocus}\r\n          onBlur={this.handleBlur}\r\n          onChange={this.handleChange}\r\n        />\r\n        <input\r\n          name={this.name}\r\n          value={this.value}\r\n          type=\"hidden\"\r\n        />\r\n      </Host>\r\n    )\r\n  }\r\n}\r\n"],"version":3}