{"version":3,"file":"form-behavior.js","sourceRoot":"","sources":["../../../src/behaviors/form-behavior/form-behavior.ts"],"names":[],"mappings":"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","sourcesContent":["import debug from 'debug/src/browser';\r\n\r\nimport { Bind } from '../../utils/lang/bind';\r\nimport { SerializeFormOptions, serializeForm } from '../../utils/serialize-form';\r\nimport { ComponentBehavior } from '../../utils/stencil/component-behavior';\r\nimport { CustomValidityState } from '../../utils/validations/validations';\r\n\r\nimport { FormFieldBehavior } from './form-field-behavior';\r\n\r\nconst log = debug('solar:FormBehavior');\r\n\r\n/**\r\n * Extend form features.\r\n */\r\nexport class FormBehavior extends ComponentBehavior<any> {\r\n  /**\r\n   * Instantiate a FormBehavior for a native Form element.\r\n   * @param host The target Form element.\r\n   */\r\n  static forNative(host: HTMLElement) {\r\n    return new FormBehavior({\r\n      host,\r\n      preventUnsaved: host.dataset.hasOwnProperty('preventUnsaved'),\r\n      disconnectedCallback: null,\r\n      native: true\r\n    });\r\n  }\r\n\r\n  /**\r\n   * All field that compound this Form.\r\n   */\r\n  private fields = new Map<string, FormFieldBehavior>();\r\n\r\n  /**\r\n   * Prevent user to leave the screen.\r\n   */\r\n  private preventUnsavedIsAttached = false;\r\n\r\n  /**\r\n   * True if this form is valid.\r\n   */\r\n  isValid: boolean;\r\n\r\n  /**\r\n   * True if the user has changed any field from the form.\r\n   */\r\n  isUnchecked: boolean;\r\n\r\n  /**\r\n   * Runs all validations from formBehavior's fields.\r\n   * If it is valid, propagates the formSubmit event to other listeners\r\n   */\r\n  @Bind\r\n  private handleSubmit(ev) {\r\n    log('Submitting', this);\r\n    ev.preventDefault();\r\n    const currentValidation = !!this.isValid;\r\n\r\n    if (!currentValidation || this.isUnchecked) {\r\n      this.checkValidity()\r\n        .then(errors => {\r\n          if (Object.keys(errors).length === 0) {\r\n            this.component.host.dispatchEvent(new CustomEvent('formSubmit'));\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Attach a listener to 'submit' to the formBehavior,\r\n   * preventing the form submission if it is invalid.\r\n   */\r\n  attach() {\r\n    log('Initializing', this);\r\n    this.component.host.addEventListener('submit', this.handleSubmit);\r\n  }\r\n\r\n  detach() {\r\n    this.component.host.removeEventListener('submit', this.handleSubmit);\r\n  }\r\n\r\n  /**\r\n   * Set the form in the valid state.\r\n   */\r\n  setValid() {\r\n    log('Set valid', this);\r\n    this.isValid = true;\r\n    this.component.host.classList.remove('form--invalid');\r\n    this.component.host.classList.add('form--valid');\r\n  }\r\n\r\n  /**\r\n   * Set the form in the invalid state.\r\n   */\r\n  setInvalid() {\r\n    log('Set invalid', this);\r\n    this.isValid = false;\r\n    this.component.host.classList.remove('form--valid');\r\n    this.component.host.classList.add('form--invalid');\r\n  }\r\n\r\n  /**\r\n   * Set the form in the unchecked state.\r\n   */\r\n  setUnchecked() {\r\n    log('Set unchecked', this);\r\n    this.isUnchecked = true;\r\n    this.isValid = false;\r\n    this.component.host.classList.remove('form--valid', 'form--invalid');\r\n    this.component.host.classList.add('form--unchecked');\r\n\r\n    // Prevent close the page with unsaved changes.\r\n    if (!this.preventUnsavedIsAttached &&\r\n      (this.component.preventUnsaved || this.component.preventUnsaved === '')) {\r\n      log('Preventing Unsaved');\r\n      window.addEventListener('beforeunload', e => {\r\n        if (this.isUnchecked) {\r\n          const confirmationMessage = this.component.preventUnsaved;\r\n\r\n          (e || window.event).returnValue = confirmationMessage; // Gecko + IE\r\n          return confirmationMessage; // Gecko + Webkit, Safari, Chrome etc.\r\n        }\r\n      });\r\n      this.preventUnsavedIsAttached = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the form in the checked state.\r\n   */\r\n  setChecked() {\r\n    log('Set checked', this);\r\n    this.isUnchecked = false;\r\n    this.component.host.classList.remove('form--unchecked');\r\n  }\r\n\r\n  /**\r\n   * Cleans all the states, errors and values of the form.\r\n   */\r\n  cleanup() {\r\n    log('Cleaning', this);\r\n    this.pristine();\r\n    const fieldsAsArray = Array.from(this.fields.values());\r\n    fieldsAsArray.forEach(f => f.cleanup());\r\n  }\r\n\r\n  /**\r\n   * Set the form in the pristine state, preserving values, removing the validations and unchecked.\r\n   */\r\n  pristine() {\r\n    log('Set pristine', this);\r\n    this.isValid = false;\r\n    this.isUnchecked = false;\r\n    this.component.host.classList.remove('form--unchecked', 'form--valid', 'form--invalid');\r\n  }\r\n\r\n  /**\r\n   * Adds a field to this logic. Note that the field must have a name.\r\n   * @param field A component's FormFieldBehavior\r\n   */\r\n  addField(field: FormFieldBehavior) {\r\n    this.fields.set(field.name, field);\r\n  }\r\n\r\n  /**\r\n   * Remove a field from this logic.\r\n   * @param field A component's FormFieldBehavior\r\n   */\r\n  removeField(field: FormFieldBehavior) {\r\n    this.fields.delete(field.name);\r\n  }\r\n\r\n  /**\r\n   * Runs all field validations from the formBehavior.\r\n   */\r\n  async checkValidity(): Promise<FormValidationErrors> {\r\n    log('Validating formBehavior', this);\r\n\r\n    this.setChecked();\r\n    const fieldsAsArray = Array.from(this.fields.values());\r\n    const errors = {};\r\n\r\n    await Promise.all(fieldsAsArray\r\n      .map(f => f.checkValidity()\r\n        .then(state => {\r\n          if (!state.valid) {\r\n            errors[f.name] = state;\r\n          }\r\n        })\r\n      ));\r\n\r\n    if (Object.keys(errors).length === 0) {\r\n      this.setValid();\r\n    } else {\r\n      this.setInvalid();\r\n      this.component.host.dispatchEvent(\r\n        new CustomEvent('formInvalid', { detail: errors })\r\n      );\r\n    }\r\n\r\n    return errors;\r\n  }\r\n\r\n  serialize(options?: SerializeFormOptions) {\r\n    log('Serializing', this.component.host, serializeForm(this.component.host, options));\r\n    return serializeForm(this.component.host, options);\r\n  }\r\n}\r\n\r\nexport interface FormValidationErrors {\r\n  [key: string]: {\r\n    errors: CustomValidityState\r\n  };\r\n}\r\n"]}