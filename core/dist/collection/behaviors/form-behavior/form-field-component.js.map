{"version":3,"file":"form-field-component.js","sourceRoot":"","sources":["../../../src/behaviors/form-behavior/form-field-component.ts"],"names":[],"mappings":"","sourcesContent":["import { ComponentBase } from '../../utils/stencil/component-behavior';\r\nimport { CustomValidityState, ValidatorFn } from '../../utils/validations/validations';\r\n\r\nimport { FormFieldBehavior } from './form-field-behavior';\r\n\r\n/**\r\n * Represents a Component that implements the FormFieldBehavior structure.\r\n */\r\nexport interface FormFieldComponent extends ComponentBase {\r\n\r\n  getNativeFormField?: () => Promise<HTMLInputElement | HTMLFieldSetElement | HTMLSelectElement | HTMLTextAreaElement>;\r\n\r\n  /**\r\n   * The field value of the component.\r\n   * @Prop\r\n   */\r\n  value: any;\r\n\r\n  /**\r\n   * The validators that ensure the field validity.\r\n   * @Prop\r\n   */\r\n  validator: ValidatorFn | ValidatorFn[];\r\n\r\n  /**\r\n   * Provide access to the form field logic.\r\n   */\r\n  formFieldBehavior: FormFieldBehavior;\r\n\r\n  /**\r\n   * The form field name.\r\n   * @Prop\r\n   */\r\n  name: string;\r\n\r\n  /**\r\n   * If this field component is required.\r\n   * @Prop\r\n   */\r\n  required: boolean;\r\n\r\n  /**\r\n   * If this field is in the disabled state.\r\n   * @Prop\r\n   */\r\n  disabled: boolean;\r\n\r\n  /**\r\n   * The actual error message.\r\n   * @Prop\r\n   */\r\n  error?: string | boolean;\r\n\r\n  /**\r\n   * Watch updates of the `error` property.\r\n   * Use the `formFieldBehavior.setValid` and `formFieldBehavior.setInvalid` in it.\r\n   * @param error the actual error message.\r\n   * @Watch('error')\r\n   */\r\n  errorDidUpdate?: (error: string) => void;\r\n\r\n  /**\r\n   * The validity state of the FormField.\r\n   */\r\n  validity: CustomValidityState;\r\n\r\n  /**\r\n   * Used to provide access to the FormField instance.\r\n   * @Method\r\n   */\r\n  getFormFieldBehavior?: () => Promise<FormFieldBehavior>\r\n}\r\n"]}