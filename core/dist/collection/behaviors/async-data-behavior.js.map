{"version":3,"file":"async-data-behavior.js","sourceRoot":"","sources":["../../src/behaviors/async-data-behavior.ts"],"names":[],"mappings":"AAAA,OAAO,EAAiB,iBAAiB,EAAE,MAAM,qCAAqC,CAAC;AAEvF;;;;GAIG;AACH,MAAM,OAAO,iBAAwB,SAAQ,iBAA2C;EACtF;;KAEG;EACH,KAAK,CAAC,YAAY;IAChB,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;IAC9B,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;IAC3G,IAAI,MAAM,YAAY,OAAO,EAAE;MAC7B,MAAM,MAAM,CAAC;KACd;IACD,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC;EACjC,CAAC;CACF","sourcesContent":["import { ComponentBase, ComponentBehavior } from '../utils/stencil/component-behavior';\r\n\r\n/**\r\n * Implements the Data fetching logic.\r\n * @param P Type of params.\r\n * @param T Type of data.\r\n */\r\nexport class AsyncDataBehavior<P, T> extends ComponentBehavior<AsyncDataComponent<P, T>> {\r\n  /**\r\n   * Call the fetch method with params, controlling the loading state.\r\n   */\r\n  async executeFetch() {\r\n    this.component.loading = true;\r\n    const result = this.component.whenReceiveData(await this.component.fetch(this.component.getFetchParams()));\r\n    if (result instanceof Promise) {\r\n      await result;\r\n    }\r\n    this.component.loading = false;\r\n  }\r\n}\r\n\r\n/**\r\n * Represents a Component that implements the data fetching logic.\r\n * @param P Type of params.\r\n * @param T Type of data.\r\n */\r\nexport interface AsyncDataComponent<P, T> extends ComponentBase {\r\n  asyncDataBehavior: AsyncDataBehavior<P, T>;\r\n\r\n  /**\r\n   * The function that fetch data.\r\n   * @param params The params used to fetch data.\r\n   */\r\n  fetch: (params: P) => Promise<AsyncMetadata<T>>;\r\n\r\n  /**\r\n   * Callback called when receive the fetched data.\r\n   */\r\n  whenReceiveData: (metaData: AsyncMetadata<T>) => Promise<void> | void;\r\n\r\n  /**\r\n   * Used to build the fetch params.\r\n   */\r\n  getFetchParams: () => P;\r\n\r\n  /**\r\n   * The loading state.\r\n   * @Prop\r\n   */\r\n  loading?: boolean;\r\n}\r\n\r\nexport interface AsyncMetadata<T> {\r\n  links?: any,\r\n  meta?: any,\r\n  data: T\r\n}\r\n"]}