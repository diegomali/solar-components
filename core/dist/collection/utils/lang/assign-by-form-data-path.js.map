{"version":3,"file":"assign-by-form-data-path.js","sourceRoot":"","sources":["../../../src/utils/lang/assign-by-form-data-path.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AACH,MAAM,UAAU,oBAAoB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK;EACtD,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EAClE,IAAI,CAAC,CAAC;EACN,IAAI,YAAY,GAAG,MAAM,CAAC;EAC1B,IAAI,UAAU,GAAG,IAAI,CAAC;EACtB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACtC,IAAI,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;MACrC,IAAI,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,YAAY,KAAK,CAAC,EAAE;QACrD,UAAU,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;OACpC;MAED,MAAM,UAAU,GAAG,YAAY,CAAC;MAChC,YAAY,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC7C,UAAU,GAAG,UAAU,CAAC;MACxB,SAAS;KACV;IACD,IAAI,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;MAC/B,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;KACtD;SAAM;MACL,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;KACjE;IAED,UAAU,GAAG,YAAY,CAAC;IAC1B,YAAY,GAAG,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;GAC5C;EAED,IAAI,YAAY,YAAY,KAAK,EAAE;IACjC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;GAC1B;OAAM;IACL,UAAU,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;GACvC;EACD,OAAO,MAAM,CAAC;AAChB,CAAC","sourcesContent":["/**\r\n * Used to assign into a object field, accessing it by it Form Data Path,\r\n * commonly used in PHP's form data parsing engine.\r\n * @param target The target Object that will be assigned.\r\n * @param path The Form Data Path to assign the value. Ex: `user[name]`.\r\n * @param value The value of the field.\r\n */\r\nexport function assignByFormDataPath(target, path, value) {\r\n  const pathTokens = path.split(/\\[/).map(p => p.replace(/\\]/, ''));\r\n  let i;\r\n  let actualTarget = target;\r\n  let lastTarget = null;\r\n  for (i = 0; i < pathTokens.length; i++) {\r\n    if (/^(\\s*|\\d+)$/.test(pathTokens[i])) {\r\n      if (!(lastTarget[pathTokens[i - 1]] instanceof Array)) {\r\n        lastTarget[pathTokens[i - 1]] = [];\r\n      }\r\n\r\n      const tempActual = actualTarget;\r\n      actualTarget = lastTarget[pathTokens[i - 1]];\r\n      lastTarget = tempActual;\r\n      continue;\r\n    }\r\n    if (Array.isArray(actualTarget)) {\r\n      actualTarget.push(actualTarget[pathTokens[i]] || {});\r\n    } else {\r\n      actualTarget[pathTokens[i]] = actualTarget[pathTokens[i]] || {};\r\n    }\r\n\r\n    lastTarget = actualTarget;\r\n    actualTarget = actualTarget[pathTokens[i]];\r\n  }\r\n\r\n  if (actualTarget instanceof Array) {\r\n    actualTarget.push(value);\r\n  } else {\r\n    lastTarget[pathTokens[i - 1]] = value;\r\n  }\r\n  return target;\r\n}\r\n"]}