{"version":3,"file":"reactivity.js","sourceRoot":"","sources":["../../../src/utils/lang/reactivity.ts"],"names":[],"mappings":"AAAA;;;GAGG;AACH,MAAM,UAAU,SAAS,CAAC,KAAK;EAC7B,OAAO,CAAC,MAAM,EAAE,QAAQ,EAAE,UAAwC,EAAE,EAAE;IACpE,UAAU,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC;IACrD,OAAO,UAAU,CAAC;EACpB,CAAC,CAAC;AACJ,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,QAAQ,CAAC,IAAI,EAAE,KAAK;EAClC,IAAI,aAAa,CAAC;EAClB,OAAO,UAAS,GAAG,IAAI;IACrB,MAAM,OAAO,GAAG,IAAI,CAAC;IACrB,YAAY,CAAC,aAAa,CAAC,CAAC;IAC5B,aAAa,GAAG,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;EACrE,CAAC,CAAC;AACJ,CAAC","sourcesContent":["/**\r\n * A method decorator used to debounce calls.\r\n * @param delay The amount of time in milliseconds to debounce.\r\n */\r\nexport function Debounced(delay): MethodDecorator {\r\n  return (target, propName, descriptor: TypedPropertyDescriptor<any>) => {\r\n    descriptor.value = debounce(target[propName], delay);\r\n    return descriptor;\r\n  };\r\n}\r\n\r\n/**\r\n * Used to debounce a target function calls.\r\n * @param func The target function to debounce.\r\n * @param delay The amount of time in milliseconds to debounce.\r\n */\r\nexport function debounce(func, delay) {\r\n  let debounceTimer;\r\n  return function(...args) {\r\n    const context = this;\r\n    clearTimeout(debounceTimer);\r\n    debounceTimer = setTimeout(() => func.apply(context, args), delay);\r\n  };\r\n}\r\n"]}