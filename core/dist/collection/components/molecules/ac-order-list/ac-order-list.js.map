{"version":3,"file":"ac-order-list.js","sourceRoot":"","sources":["../../../../src/components/molecules/ac-order-list/ac-order-list.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Prop, Method, Element, h, EventEmitter, Event, Watch } from '@stencil/core';\r\nimport { AcFaIcon } from '../../utils/ac-fa-icon';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { isEmpty } from 'ramda';\r\nimport { AcOption } from '../../../utils/types/ac-option';\r\n\r\n@Component({\r\n  tag: 'ac-order-list',\r\n  styleUrl: 'ac-order-list.scss'\r\n})\r\nexport class AcOrderList {\r\n  /**\r\n   * Reference to the component\r\n   */\r\n  @Element() host: HTMLAcOrderListElement;\r\n\r\n  @Prop() filterText: string;\r\n  /**\r\n   * List of all options available.\r\n   */\r\n  @Prop({ mutable: true }) options: AcOption[];\r\n  /**\r\n   * Used to customize the searchbar's label\r\n   */\r\n  @Prop() searchLabel: string;\r\n  /**\r\n   * Used to customize the field label\r\n   */\r\n  @Prop() label: string;\r\n  /**\r\n   * Message that will be rendered with the search results in zero items\r\n   */\r\n  @Prop() noResultsLabel: string;\r\n  /**\r\n   * If true, the component will handle multiple selected items.\r\n   */\r\n  @Prop({ reflect: true }) multiple: boolean = false;\r\n\r\n  /**\r\n   * Event trigger on state change\r\n   * @param {AcList} acList - Component.\r\n   */\r\n  @Event() listChange: EventEmitter<AcOrderList>;\r\n\r\n\r\n  @Watch('options')\r\n  handleOptionsChange() {\r\n    this.options\r\n      .forEach((option, index) => {\r\n        if (option.order === undefined) {\r\n          option.order = index;\r\n        }\r\n      });\r\n    this.listChange.emit(this);\r\n  }\r\n\r\n  private updateSelectedOptions(option) {\r\n    if (this.multiple === false) {\r\n      this.options.filter(x => x.value !== option.value).forEach(x => x.selected = false);\r\n    }\r\n    option.selected = !option.selected;\r\n    this.options = [ ...this.options ];\r\n    this.listChange.emit(this);\r\n  }\r\n\r\n  handleSelect(e, option) {\r\n    e.stopImmediatePropagation();\r\n    this.updateSelectedOptions(option);\r\n  }\r\n\r\n  handleChecked(e, option) {\r\n    /* TODO: review ac-check fire more than once */\r\n    e.stopImmediatePropagation();\r\n    if (!e.srcElement.classList.contains('ac-check__native')) {\r\n      return;\r\n    }\r\n    if (this.multiple === false) {\r\n      this.options.filter(x => x.value !== option.value).forEach(x => x.selected = false);\r\n    }\r\n    this.updateSelectedOptions(option);\r\n  }\r\n\r\n  @Method()\r\n  async getSelectedOptions() {\r\n    return Promise.resolve(this.options.filter(x => x.selected));\r\n  }\r\n\r\n  componentDidLoad() {\r\n    if (!this.options) {\r\n      this.loadOptionsFromHTML();\r\n    }\r\n  }\r\n\r\n  loadOptionsFromHTML() {\r\n    const listItems = Array.from(this.host.querySelectorAll('option'));\r\n    if (listItems) {\r\n      this.options = listItems\r\n      .map((item: any) => {\r\n        return ({\r\n          title: item.text,\r\n          value: item.value,\r\n          selected: item.hasAttribute('selected') ? item.selected : false,\r\n          separator: false,\r\n          group: item.parentElement.tagName === 'OPTGROUP' ? item.parentElement.label : null\r\n        }) as AcOption\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    const listItems = this.renderList();\r\n    return [\r\n        <section style={{ display: 'none' }}>\r\n          <slot />\r\n        </section>,\r\n        <label class=\"ac-order-list__header-title\">\r\n          {this.label} ({this.options ? this.options.length : 0})\r\n        </label>,\r\n        <section class=\"ac-order-list__container\" >\r\n          <ac-input-base\r\n            class=\"ac-order-list__search-bar\"\r\n            type=\"text\"\r\n            placeholder={this.searchLabel}\r\n            value={this.filterText}\r\n            onChange={({ target: { value } }: any) => this.setFilterText(value)}\r\n            size=\"small\"\r\n          >\r\n            <ac-button\r\n              slot=\"item-start\"\r\n              fill=\"clear\"\r\n              icon-only\r\n            >\r\n              <AcFaIcon icon={faSearch} class=\"ac-list__search-bar-icon\" size={12}  />\r\n            </ac-button>\r\n          </ac-input-base>\r\n          <ol class=\"ac-list\">\r\n            {listItems.length > 0\r\n              ? listItems\r\n              : !isEmpty(this.filterText) && <li class=\"ac-list__item ac-list__list-item--empty\">{this.noResultsLabel}</li>\r\n            }\r\n          </ol>\r\n        </section>\r\n    ];\r\n  }\r\n\r\n  private renderList() {\r\n    if (this.options) {\r\n      const options = this.filterText\r\n        ? this.options.filter(option => option.title.toUpperCase().includes(this.filterText.toUpperCase()))\r\n        : this.options;\r\n      let hasGroup = false;\r\n      const a = options\r\n              .sort((a, b) => a.order > b.order ? 1 : -1)\r\n              .reduce((state, option) => {\r\n                if (!(state.has(option.group))) {\r\n                  hasGroup = hasGroup === false && !isEmpty(option.group) ? true : hasGroup;\r\n                  state.set(option.group, [(\r\n                    <li class=\"ac-list__separator\">\r\n                      <span class=\"ac-list__separator-title\">{option.group}</span>\r\n                      <span class=\"ac-list__separator-line\"></span>\r\n                    </li>\r\n                  )]);\r\n                }\r\n                const elements = state.has(option.group)\r\n                  ? state.get(option.group)\r\n                  : [];\r\n                elements.push((\r\n                  <li value={option.value}\r\n                      key={option.value}\r\n                      class={{\r\n                        \"ac-list__item\": true,\r\n                        \"ac-list__item--selected\": option.selected\r\n                      }}\r\n                      onClick={(e) => this.handleSelect(e, option)}>\r\n                    {this.multiple && <ac-check class=\"ac-order-list__checkbox\"\r\n                      checked={option.selected} onClick={(e) => this.handleChecked(e, option)}></ac-check>}\r\n                    {option.title}\r\n                  </li>\r\n                ));\r\n                state.set(option.group, elements);\r\n                return state;\r\n              }, new Map());\r\n      return Array.from(a.values()).reduce((result, arr) => {\r\n        if (hasGroup === false) {\r\n          arr.splice(0, 1);\r\n        }\r\n        return result.concat(arr);\r\n      } , []);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  private setFilterText = (text: string) => this.filterText = text;\r\n}\r\n"]}