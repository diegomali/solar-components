{"version":3,"file":"ac-collapse.js","sourceRoot":"","sources":["../../../../src/components/molecules/ac-collapse/ac-collapse.tsx"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,MAAM,mCAAmC,CAAC;AAC/E,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAgB,MAAM,eAAe,CAAC;AAEvF,OAAO,EAAE,IAAI,EAAE,MAAM,0BAA0B,CAAC;AAChD,OAAO,EAAE,gBAAgB,EAAE,MAAM,2CAA2C,CAAC;AAC7E,OAAO,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;AAMlD,MAAM,OAAO,UAAU;;IACb,oBAAe,GAAG,gBAAgB,EAAyB,CAAC;;;EAS9D,AAAN,KAAK,CAAC,YAAY;IAChB,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;EAChD,CAAC;EAED,MAAM;IACJ,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC;IACzD,sCAAsC;IACtC,MAAM,aAAa,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAE/G,OAAO,CACL,EAAC,IAAI,IACH,KAAK,EAAE;QACL,uBAAuB,EAAE,IAAI,CAAC,QAAQ;OACvC;MAED,eAAS,KAAK,EAAC,mBAAmB;QAChC,WAAK,KAAK,EAAC,qBAAqB;UAC9B,WAAK,KAAK,EAAC,6BAA6B;YACtC,YAAM,IAAI,EAAC,QAAQ,GAAE,CACjB;UACN,iBACE,KAAK,EAAC,4BAA4B,EAClC,KAAK,EAAC,OAAO,EACb,IAAI,EAAC,OAAO,EACZ,KAAK,EAAC,SAAS,EACf,OAAO,EAAE,IAAI,CAAC,YAAY;YAG1B,EAAC,QAAQ,IAAC,IAAI,EAAE,IAAI,GAAG,CACb,CACR;QACN,WACE,KAAK,EAAC,sBAAsB,EAC5B,GAAG,EAAE,IAAI,CAAC,eAAe,EACzB,KAAK,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE;UAEhC,YAAM,IAAI,EAAC,SAAS,GAAE,CAClB,CACE,CACL,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF;AA3CO;EADL,IAAI;8CAIJ","sourcesContent":["import { faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { Component, Element, Host, Prop, h, Event, EventEmitter } from '@stencil/core';\r\n\r\nimport { Bind } from '../../../utils/lang/bind';\r\nimport { createElementRef } from '../../../utils/stencil/create-element-ref';\r\nimport { AcFaIcon } from '../../utils/ac-fa-icon';\r\n\r\n@Component({\r\n  tag: 'ac-collapse',\r\n  styleUrl: 'ac-collapse.scss'\r\n})\r\nexport class AcCollapse {\r\n  private collapseContent = createElementRef<HTMLAcCollapseElement>();\r\n\r\n  @Element() host: HTMLElement;\r\n\r\n  @Prop() expanded: boolean;\r\n\r\n  @Event() toggle: EventEmitter<{ expanded: boolean }>;\r\n\r\n  @Bind\r\n  async handleToggle() {\r\n    this.expanded = !this.expanded;\r\n    this.toggle.emit({ expanded: this.expanded });\r\n  }\r\n\r\n  render() {\r\n    const icon = this.expanded ? faChevronUp : faChevronDown;\r\n    // @TODO: Review animation util usage.\r\n    const contentHeight = (this.expanded ? this.collapseContent.nativeElement.children[0].clientHeight : 0) + 'px';\r\n\r\n    return (\r\n      <Host\r\n        class={{\r\n          'ac-collapse--expanded': this.expanded,\r\n        }}\r\n      >\r\n        <ac-card class=\"ac-collapse__card\">\r\n          <div class=\"ac-collapse__header\">\r\n            <div class=\"ac-collapse__header-wrapper\">\r\n              <slot name=\"header\"/>\r\n            </div>\r\n            <ac-button\r\n              class=\"ac-collapse__toggle-button\"\r\n              shape=\"round\"\r\n              fill=\"clear\"\r\n              theme=\"primary\"\r\n              onClick={this.handleToggle}\r\n              icon-only\r\n            >\r\n              <AcFaIcon icon={icon}/>\r\n            </ac-button>\r\n          </div>\r\n          <div\r\n            class=\"ac-collapse__content\"\r\n            ref={this.collapseContent}\r\n            style={{ height: contentHeight }}\r\n          >\r\n            <slot name=\"content\"/>\r\n          </div>\r\n        </ac-card>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}