{"version":3,"file":"ac-navdrawer-controller.js","sourceRoot":"","sources":["../../../../../src/components/atoms/ac-navdrawer/ac-navdrawer-controller/ac-navdrawer-controller.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAEjE,OAAO,EACL,kBAAkB,GAGnB,MAAM,+DAA+D,CAAC;AACvE,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AAIjE;;GAEG;AAIH,MAAM,OAAO,iBAAiB;;IAC5B;;OAEG;IACH,uBAAkB,GAAG,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC;IAElD,WAAM,GAAG,cAAc,CAAC;;;EAOxB;;KAEG;EAEH,KAAK,CAAC,MAAM,CAAC,KAA0D;IACrE,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAyB,CAAC;IAC7E,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC3B,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;IAClC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;IACxB,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC;IACpB,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,iCAAK,KAAK,KAAE,UAAU,EAAE,KAAK,IAAE,CAAC;IAEtF,OAAO,CAAC,gBAAgB,CAAC,eAAe,EAAE,GAAG,EAAE;MAC7C,SAAS,CAAC,MAAM,EAAE,CAAC;IACrB,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;MACvC,OAAO,CAAC,MAAM,EAAE,CAAC;MACjB,aAAa,CAAC,MAAM,EAAE,CAAC;IACzB,CAAC,CAAC,CAAC;IACH,aAAa,CAAC,OAAO,EAAE,CAAC;IACxB,OAAO,SAAS,CAAC;EACnB,CAAC;EAED;;KAEG;EAEH,KAAK,CAAC,OAAO;IACX,OAAO;EACT,CAAC;EAED,oBAAoB,KAAI,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAC1B","sourcesContent":["import { Component, Element, Method, Prop } from '@stencil/core';\r\n\r\nimport {\r\n  ControllerBehavior,\r\n  ControllerComponent,\r\n  ControllerComponentOptions,\r\n} from '../../../../behaviors/controller-behavior/controller-behavior';\r\nimport { ScrollManager } from '../../../../utils/scroll-manager';\r\nimport { AcOverlay } from '../../../portals/ac-overlay/ac-overlay';\r\nimport { AcNavdrawer } from '../ac-navdrawer';\r\n\r\n/**\r\n * A controller that creates navdrawer on the screen.\r\n */\r\n@Component({\r\n  tag: 'ac-navdrawer-controller',\r\n})\r\nexport class AcModalController implements ControllerComponent<AcNavdrawer, HTMLAcNavdrawerElement> {\r\n  /**\r\n   * The instance of the controller behavior that setup the modals on the screen.\r\n   */\r\n  controllerBehavior = new ControllerBehavior(this);\r\n\r\n  target = 'ac-navdrawer';\r\n\r\n  @Element() host: HTMLElement;\r\n\r\n  @Prop() bound: string;\r\n\r\n\r\n  /**\r\n   * Setup a new navdrawer on the screen.\r\n   */\r\n  @Method()\r\n  async create(props: ControllerComponentOptions<AcNavdrawer & AcOverlay>) {\r\n    const wrapper = document.createElement('ac-overlay') as HTMLAcOverlayElement;\r\n    wrapper.backdrop = 'light';\r\n    wrapper.position = props.position;\r\n    props.wrapper = wrapper;\r\n    props.mode = 'over';\r\n    const navDrawer = await this.controllerBehavior.create({...props, showToggle: false});\r\n\r\n    wrapper.addEventListener('backDropClick', () => {\r\n      navDrawer.remove();\r\n    });\r\n\r\n    navDrawer.addEventListener('close', () => {\r\n      wrapper.remove();\r\n      ScrollManager.enable();\r\n    });\r\n    ScrollManager.disable();\r\n    return navDrawer;\r\n  }\r\n\r\n  /**\r\n   * Clear all modals that are displayed.\r\n   */\r\n  @Method()\r\n  async dismiss() {\r\n    return;\r\n  }\r\n\r\n  disconnectedCallback() {}\r\n}\r\n"]}