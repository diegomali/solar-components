{"version":3,"file":"ac-navdrawer.js","sourceRoot":"","sources":["../../../../src/components/atoms/ac-navdrawer/ac-navdrawer.tsx"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,aAAa,EAAE,cAAc,EAAE,OAAO,EAAE,MAAM,mCAAmC,CAAC;AAC3F,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAgB,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAC9F,OAAO,EAAE,KAAK,EAAE,MAAM,OAAO,CAAC;AAE9B,OAAO,EAAE,kBAAkB,EAAuB,MAAM,wCAAwC,CAAC;AACjG,OAAO,EAAE,IAAI,EAAE,MAAM,0BAA0B,CAAC;AAEhD,OAAO,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;AAClD,OAAO,EAAE,cAAc,EAAE,MAAM,8BAA8B,CAAC;AAE9D;;GAEG;AAKH,MAAM,OAAO,WAAW;;IAEtB;;OAEG;IACH,uBAAkB,GAAG,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC;sBAM7B,IAAI;;;gBAaO,MAAM;;;;EActC,gBAAgB;IACd,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE;MAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;KAC9B;EACH,CAAC;EAED,gBAAgB;IACd,IAAI,CAAC,iBAAiB,EAAE,CAAC;EAC3B,CAAC;EAED,iBAAiB,KAAI,CAAC;EACtB,oBAAoB;IAClB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;EACtB,CAAC;EAEO,iBAAiB;IACvB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC;EACtE,CAAC;EAGO,UAAU;IAChB,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;EAC/B,CAAC;EAGO,KAAK;IACX,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;EACrB,CAAC;EAED,YAAY;IACV,IAAI,IAAI,CAAC,OAAO,EAAE;MAChB,OAAO,CACL,yBACE,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,KAAK,EAAC,8BAA8B,GAElB,CAAC,CAAC;KACzB;SAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;MAC7B,OAAO,CACL,WAAK,KAAK,EAAC,qBAAqB;QAC9B,YAAM,KAAK,EAAC,6BAA6B,IAAE,IAAI,CAAC,KAAK,CAAQ;QAC7D,iBACI,KAAK,EAAC,4BAA4B,EAClC,IAAI,EAAC,OAAO,EACZ,KAAK,EAAC,SAAS,EACf,KAAK,EAAC,OAAO,qBAEb,OAAO,EAAE,IAAI,CAAC,KAAK;UAErB,EAAC,QAAQ,IAAC,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,GAAI,CAC3B,CACR,CAAC,CAAC;KACX;SAAM;MACL,OAAO,YAAM,IAAI,EAAC,QAAQ,GAAE,CAAC;KAC9B;EACH,CAAC;EAED,MAAM;IACJ,OAAO,CACL,EAAC,IAAI,IACH,KAAK,EAAE;QACL,CAAC,iBAAiB,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK;QAC7C,uBAAuB,EAAE,IAAI,CAAC,OAAO;QACrC,oBAAoB,EAAE,IAAI,CAAC,IAAI,KAAK,MAAM;OAC3C;MAED,WAAK,KAAK,EAAC,sBAAsB,IAChC,IAAI,CAAC,YAAY,EAAE,CACd;MACN,WAAK,KAAK,EAAC,uBAAuB;QAChC,YAAM,IAAI,EAAC,SAAS,GAAE,CAClB;MACL,IAAI,CAAC,UAAU,IAAI,WAAK,KAAK,EAAC,6BAA6B,EAAC,OAAO,EAAE,IAAI,CAAC,UAAU;QACnF,EAAC,cAAc,IAAC,KAAK,EAAC,gCAAgC,GAAE;QACxD,EAAC,QAAQ,IACP,KAAK,EAAC,kCAAkC,EACxC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,aAAa,EACnD,IAAI,EAAE,EAAE,GACR,CACE,CACD,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF;AAhES;EADP,IAAI;6CAGJ;AAGO;EADP,IAAI;wCAGJ","sourcesContent":["import { faChevronLeft, faChevronRight, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { Component, Element, Event, EventEmitter, Host, Prop, Watch, h } from '@stencil/core';\r\nimport { isNil } from 'ramda';\r\n\r\nimport { TransitionBehavior, TransitionComponent } from '../../../behaviors/transition-behavior';\r\nimport { Bind } from '../../../utils/lang/bind';\r\nimport { AcDropOption } from '../../molecules/ac-drop-down-menu/ac-drop-option';\r\nimport { AcFaIcon } from '../../utils/ac-fa-icon';\r\nimport { AcNeogridShape } from '../../utils/ac-neogrid-shape';\r\n\r\n/**\r\n * Accera's Sidebar webcomponent.\r\n */\r\n@Component({\r\n  tag: 'ac-navdrawer',\r\n  styleUrl: 'ac-navdrawer.scss',\r\n})\r\nexport class AcNavdrawer implements TransitionComponent {\r\n  childMenus: HTMLAcMenuElement[];\r\n  /**\r\n   * The instance of the transition behavior used to animate this component.\r\n   */\r\n  transitionBehavior = new TransitionBehavior(this);\r\n  @Element() host: HTMLAcNavdrawerElement;\r\n\r\n  /**\r\n   * Show or hide toggle button\r\n   */\r\n  @Prop() showToggle = true;\r\n\r\n  /**\r\n   * Show title in the navdrawer and toggle header\r\n   */\r\n  @Prop() title: string;\r\n  /**\r\n   * The color theme.\r\n   */\r\n  @Prop() theme: string;\r\n  /**\r\n   * Control the mode of the navedrawer.\r\n   */\r\n  @Prop() mode: 'push' | 'over' = 'push';\r\n  /**\r\n   * Compact mode.\r\n   */\r\n  @Prop({ mutable: true }) compact: boolean;\r\n\r\n  /**\r\n   * List of option to be show on the header.\r\n   */\r\n  @Prop() options: AcDropOption[];\r\n\r\n  @Event({ eventName: 'close' }) closeEv: EventEmitter<void>;\r\n\r\n  @Watch('compact')\r\n  compactDidUpdate() {\r\n    for (const menu of this.childMenus) {\r\n      menu.iconOnly = this.compact;\r\n    }\r\n  }\r\n\r\n  componentDidLoad() {\r\n    this.loadItemsFromHTML();\r\n  }\r\n\r\n  componentWillLoad() {}\r\n  disconnectedCallback() {\r\n    this.closeEv.emit();\r\n  }\r\n\r\n  private loadItemsFromHTML() {\r\n    this.childMenus = Array.from(this.host.querySelectorAll('ac-menu'));\r\n  }\r\n\r\n  @Bind\r\n  private toggleMode() {\r\n    this.compact = !this.compact;\r\n  }\r\n\r\n  @Bind\r\n  private close() {\r\n    this.host.remove();\r\n  }\r\n\r\n  renderHeader() {\r\n    if (this.options) {\r\n      return (\r\n        <ac-drop-down-menu\r\n          compact={this.compact}\r\n          options={this.options}\r\n          class=\"ac-navdrawer__drop-down-menu\"\r\n        >\r\n        </ac-drop-down-menu>);\r\n    } else if (!isNil(this.title)) {\r\n      return (\r\n        <div class=\"ac-navdrawer__title\">\r\n          <span class=\"ac-navdrawer__title-content\">{this.title}</span>\r\n          <ac-button\r\n              class=\"ac-navdrawer__close-button\"\r\n              fill=\"clear\"\r\n              theme=\"primary\"\r\n              shape=\"round\"\r\n              icon-only\r\n              onClick={this.close}\r\n          >\r\n            <AcFaIcon icon={faTimes} size={14} />\r\n          </ac-button>\r\n        </div>);\r\n    } else {\r\n      return <slot name=\"header\"/>;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host\r\n        class={{\r\n          [`ac-navdrawer--${this.theme}`]: !!this.theme,\r\n          'ac-navdrawer--compact': this.compact,\r\n          'ac-navdrawer--over': this.mode === 'over'\r\n        }}\r\n      >\r\n        <div class=\"ac-navdrawer__header\">\r\n        {this.renderHeader()}\r\n        </div>\r\n        <nav class=\"ac-navdrawer__content\">\r\n          <slot name=\"content\"/>\r\n        </nav>\r\n        {this.showToggle && <div class=\"ac-navdrawer__toggle-button\" onClick={this.toggleMode}>\r\n          <AcNeogridShape class=\"ac-navdrawer__toggle-button-bg\"/>\r\n          <AcFaIcon\r\n            class=\"ac-navdrawer__toggle-button-icon\"\r\n            icon={this.compact ? faChevronRight : faChevronLeft}\r\n            size={12}\r\n          />\r\n        </div>}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}