{"version":3,"file":"ac-input-base.js","sourceRoot":"","sources":["../../../../src/components/atoms/ac-input-base/ac-input-base.tsx"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,SAAS,EAAsB,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAErG,OAAO,EAAE,IAAI,EAAE,MAAM,0BAA0B,CAAC;AAEhD;;GAEG;AAKH,MAAM,OAAO,WAAW;;;;;iBAuBN,SAAS;;;;;;;;;;;;;;;;;;;EAqFzB,KAAK,CAAC,cAAc;IAClB,OAAO,IAAI,CAAC,WAAW,CAAC;EAC1B,CAAC;EAED;;KAEG;EAEH,KAAK,CAAC,QAAQ;IACZ,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;EAC3B,CAAC;EAGO,WAAW;IACjB,mHAAmH;IACnH,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;IAC5C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;EACvB,CAAC;EAGO,UAAU;IAChB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;EACxB,CAAC;EAGO,YAAY;IAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;EACtC,CAAC;EAED,MAAM;IAEJ,OAAO,CACL,EAAC,IAAI,IACH,KAAK,EAAE;QACL,CAAC,kBAAkB,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK;QAC9C,CAAC,kBAAkB,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI;QAC5C,uBAAuB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE;QAC1D,yBAAyB,EAAE,CAAC,IAAI,CAAC,KAAK;QACtC,yBAAyB,EAAE,IAAI,CAAC,QAAQ;QACxC,sBAAsB,EAAE,IAAI,CAAC,KAAK;QAClC,sBAAsB,EAAE,IAAI,CAAC,QAAQ;OACtC;MAED,WAAK,KAAK,EAAC,sBAAsB;QAC/B,YAAM,IAAI,EAAC,YAAY,GAAE,CACrB;MACN,YAAM,KAAK,EAAC,2BAA2B;QACvC,aACE,KAAK,EAAC,iBAAiB;UAEvB,YAAM,IAAI,EAAC,aAAa,GAAE;UACzB,IAAI,CAAC,KAAK,CACL;QACR,aACE,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,GAAG,KAAK,EACtC,KAAK,EAAC,kBAAkB,EACxB,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,MAAM,EACzB,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,GAAG,EAAE,IAAI,CAAC,GAAG,EACb,GAAG,EAAE,IAAI,CAAC,GAAG,EACb,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,YAAY,EAAE,IAAI,CAAC,YAAY,EAC/B,cAAc,EAAE,IAAI,CAAC,cAAc,EACnC,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,OAAO,EAAE,IAAI,CAAC,WAAW,EACzB,MAAM,EAAE,IAAI,CAAC,UAAU,EACvB,IAAI,EAAE,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,kBAAkB,CAAC,CAAC,CAAC,SAAS,GAC1E,CACG;MACL,WAAK,KAAK,EAAC,oBAAoB;QAC7B,YAAM,IAAI,EAAC,UAAU,GAAE,CACnB,CACD,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF;AAtES;EADP,IAAI;8CAKJ;AAGO;EADP,IAAI;6CAGJ;AAGO;EADP,IAAI;+CAGJ","sourcesContent":["import { Component, ComponentInterface, Element, Host, Method, Prop, State, h } from '@stencil/core';\r\n\r\nimport { Bind } from '../../../utils/lang/bind';\r\n\r\n/**\r\n * Accera's full-featured Input web-component.\r\n */\r\n@Component({\r\n  tag: 'ac-input-base',\r\n  styleUrl: 'ac-input-base.scss',\r\n})\r\nexport class AcInputBase implements ComponentInterface {\r\n  private nativeInput?: HTMLInputElement;\r\n\r\n  @Element() host: HTMLAcInputBaseElement;\r\n\r\n  /**\r\n   * The native HTMLInputElement name attribute.\r\n   */\r\n  @Prop() name: string;\r\n\r\n  /**\r\n   * The label text of the this input group.\r\n   */\r\n  @Prop() label: string;\r\n\r\n  /**\r\n   * Error mode.\r\n   */\r\n  @Prop({ reflect: true }) error: boolean;\r\n\r\n  /**\r\n   * The theme color defined in the color palette.\r\n   */\r\n  @Prop() theme = 'primary';\r\n\r\n  /**\r\n   * The input's size.\r\n   */\r\n  @Prop() size?: 'small' | 'large';\r\n\r\n  /**\r\n   * The value of the internal input.\r\n   */\r\n  @Prop({ mutable: true }) value: any;\r\n\r\n  /**\r\n   * The type of the internal input.\r\n   */\r\n  @Prop({ reflect: true }) type: string;\r\n\r\n  /**\r\n   * The native HTMLInputElement pattern attribute.\r\n   */\r\n  @Prop({ reflect: true }) pattern: string;\r\n\r\n  /**\r\n   * Enable readonly.\r\n   */\r\n  @Prop({ reflect: true }) readonly: boolean;\r\n\r\n  /**\r\n   * The HTMLInputElement disabled attribute.\r\n   */\r\n  @Prop({ reflect: true }) disabled: boolean;\r\n\r\n  /**\r\n   * The native HTMLInputElement required attribute.\r\n   */\r\n  @Prop({ reflect: true }) required: boolean;\r\n\r\n  /**\r\n   * The native HTMLInputElement max attribute.\r\n   */\r\n  @Prop({ reflect: true }) max: number;\r\n\r\n  /**\r\n   * The native HTMLInputElement maxlength attribute.\r\n   */\r\n  @Prop({ reflect: true }) maxlength: number;\r\n\r\n  /**\r\n   * The native HTMLInputElement min attribute.\r\n   */\r\n  @Prop({ reflect: true }) min: number;\r\n\r\n  /**\r\n   * The native HTMLInputElement min attribute.\r\n   */\r\n  @Prop({ reflect: true }) minlength: number;\r\n\r\n  /**\r\n   * The native HTMLInputElement autofocus attribute.\r\n   */\r\n  @Prop({ reflect: true }) autofocus: boolean;\r\n\r\n  /**\r\n   * The native HTMLInputElement autocomplete attribute.\r\n   */\r\n  @Prop({ reflect: true }) autocomplete: string;\r\n\r\n  /**\r\n   * The native HTMLInputElement autocapitalize attribute.\r\n   */\r\n  @Prop({ reflect: true }) autocapitalize: string;\r\n\r\n  /**\r\n   * The native HTMLInputElement placeholder attribute.\r\n   */\r\n  @Prop({ reflect: true }) placeholder: string;\r\n\r\n  /**\r\n   * The native HTMLInputElement step attribute.\r\n   */\r\n  @Prop({ reflect: true }) step: number;\r\n\r\n  @State() hasFocus: boolean;\r\n\r\n  @Method()\r\n  async getNativeInput() {\r\n    return this.nativeInput;\r\n  }\r\n\r\n  /**\r\n   * Set focus state in the native input.\r\n   */\r\n  @Method()\r\n  async setFocus() {\r\n    this.nativeInput.focus();\r\n  }\r\n\r\n  @Bind\r\n  private handleFocus() {\r\n    // @TODO: Check why events handled by stencil dont propagate itself. So, create a decorator that wrapper this line.\r\n    this.host.dispatchEvent(new Event('focus'));\r\n    this.hasFocus = true;\r\n  }\r\n\r\n  @Bind\r\n  private handleBlur() {\r\n    this.hasFocus = false;\r\n  }\r\n\r\n  @Bind\r\n  private handleChange() {\r\n    this.value = this.nativeInput.value;\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Host\r\n        class={{\r\n          [`ac-input-base--${this.theme}`]: !!this.theme,\r\n          [`ac-input-base--${this.size}`]: !!this.size,\r\n          'ac-input-base--filled': !!this.value && this.value !== '',\r\n          'ac-input-base--no-label': !this.label,\r\n          'ac-input-base--disabled': this.disabled,\r\n          'ac-input-base--error': this.error,\r\n          'ac-input-base--focus': this.hasFocus,\r\n        }}\r\n      >\r\n        <div class=\"ac-input__item-start\">\r\n          <slot name=\"item-start\"/>\r\n        </div>\r\n        <span class=\"ac-input__input-container\">\r\n        <label\r\n          class=\"ac-input__label\"\r\n        >\r\n          <slot name=\"input-label\"/>\r\n          {this.label}\r\n        </label>\r\n        <input\r\n          ref={input => this.nativeInput = input}\r\n          class=\"ac-input__native\"\r\n          name={this.name}\r\n          value={this.value}\r\n          type={this.type || 'text'}\r\n          pattern={this.pattern}\r\n          readonly={this.readonly}\r\n          disabled={this.disabled}\r\n          required={this.required}\r\n          max={this.max}\r\n          min={this.min}\r\n          maxlength={this.maxlength}\r\n          minlength={this.minlength}\r\n          autofocus={this.autofocus}\r\n          autocomplete={this.autocomplete}\r\n          autocapitalize={this.autocapitalize}\r\n          placeholder={this.placeholder}\r\n          onChange={this.handleChange}\r\n          onFocus={this.handleFocus}\r\n          onBlur={this.handleBlur}\r\n          step={this.type === 'number' ? this.step || '0.00000000000001' : undefined}\r\n        />\r\n      </span>\r\n        <div class=\"ac-input__item-end\">\r\n          <slot name=\"item-end\"/>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}