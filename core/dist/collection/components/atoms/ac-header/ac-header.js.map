{"version":3,"file":"ac-header.js","sourceRoot":"","sources":["../../../../src/components/atoms/ac-header/ac-header.tsx"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAEjF,OAAO,EAAE,IAAI,EAAE,MAAM,0BAA0B,CAAC;AAChD,OAAO,EAAE,UAAU,EAAE,MAAM,0BAA0B,CAAC;AAEtD;;GAEG;AAMH,MAAM,OAAO,QAAQ;;iBAKH,SAAS;;;;EAMzB,gBAAgB;IACd,mCAAmC;IACnC,MAAM,YAAY,GAChB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,KAAK,WAAW,CAAC,CAAC;MAC/C,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;MACzB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,OAAO,KAAK,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC;IAEjH,IAAI,YAAY,EAAE;MAChB,IAAI,CAAC,YAAY,GAAG,YAAmB,CAAC;MACxC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;KACvE;EACH,CAAC;EAGD,yBAAyB,CAAC,EAAE;IAC1B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC;EACpC,CAAC;EAGD,eAAe;IACb,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,UAAU,CAAC;EAC3C,CAAC;EAED,MAAM;IACJ,OAAO,CACL,EAAC,IAAI,IACH,KAAK,EAAE;QACL,CAAC,cAAc,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,KAAK,SAAS;QACtD,qBAAqB,EAAE,IAAI,CAAC,QAAQ;OACrC;MAED,cAAQ,KAAK,EAAC,6BAA6B;QACxC,IAAI,CAAC,YAAY,CAAC,CAAC;UAClB,iBACE,KAAK,EAAC,wBAAwB,EAC9B,KAAK,EAAC,OAAO,EACb,IAAI,EAAC,OAAO,iBACA,eAAe,qBAE3B,OAAO,EAAE,IAAI,CAAC,eAAe;YAE7B,EAAC,UAAU,OAAE,CACH;UACZ,CAAC,CAAC,eAAO;QAEX,WAAK,KAAK,EAAC,oBAAoB;UAC7B,eAAO,CACH;QACN,WAAK,KAAK,EAAC,oBAAoB;UAC7B,YAAM,IAAI,EAAC,SAAS,GAAE,CAClB,CACC;MACT,YAAM,IAAI,EAAC,YAAY,GAAE,CACpB,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF;AArCC;EADC,IAAI;+CAGJ","sourcesContent":["import { Component, Element, Host, Listen, Prop, State, h } from '@stencil/core';\r\n\r\nimport { Bind } from '../../../utils/lang/bind';\r\nimport { AcMenuIcon } from '../../utils/ac-menu-icon';\r\n\r\n/**\r\n * Accera's header web-component.\r\n */\r\n@Component({\r\n  tag: 'ac-header',\r\n  styleUrl: 'ac-header.scss',\r\n  shadow: false,\r\n})\r\nexport class AcHeader {\r\n  private parentLayout: HTMLAcLayoutElement;\r\n\r\n  @Element() host: HTMLAcHeaderElement;\r\n\r\n  @Prop() theme = 'primary';\r\n\r\n  @Prop({ reflect: true, mutable: true }) scrolled: boolean;\r\n\r\n  @State() hasNavdrawer: boolean;\r\n\r\n  componentDidLoad() {\r\n    // @TODO: Use dependency injection.\r\n    const parentLayout =\r\n      this.host.parentElement.tagName === 'AC-LAYOUT' ?\r\n        this.host.parentElement :\r\n        this.host.parentElement.parentElement.tagName === 'AC-LAYOUT' ? this.host.parentElement.parentElement : null;\r\n\r\n    if (parentLayout) {\r\n      this.parentLayout = parentLayout as any;\r\n      this.hasNavdrawer = !!this.parentLayout.querySelector('ac-navdrawer');\r\n    }\r\n  }\r\n\r\n  @Listen('contentScroll', { target: 'window' })\r\n  handleLayoutContentScroll(ev) {\r\n    this.scrolled = ev.detail.top > 0;\r\n  }\r\n\r\n  @Bind\r\n  handleMenuClick() {\r\n    this.parentLayout.collapsed = 'nav-left';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host\r\n        class={{\r\n          [`ac-header--${this.theme}`]: this.theme !== undefined,\r\n          'ac-header--scrolled': this.scrolled\r\n        }}\r\n      >\r\n        <header class=\"ac-header__header-container\">\r\n          {this.hasNavdrawer ?\r\n            <ac-button\r\n              class=\"ac-header__menu-button\"\r\n              shape=\"round\"\r\n              fill=\"clear\"\r\n              data-toggle=\"mainNavdrawer\"\r\n              icon-only\r\n              onClick={this.handleMenuClick}\r\n            >\r\n              <AcMenuIcon/>\r\n            </ac-button>\r\n            : <span/>\r\n          }\r\n          <div class=\"ac-header__content\">\r\n            <slot/>\r\n          </div>\r\n          <div class=\"ac-header__actions\">\r\n            <slot name=\"actions\"/>\r\n          </div>\r\n        </header>\r\n        <slot name=\"sub-header\"/>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}