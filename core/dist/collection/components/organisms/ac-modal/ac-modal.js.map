{"version":3,"file":"ac-modal.js","sourceRoot":"","sources":["../../../../src/components/organisms/ac-modal/ac-modal.tsx"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,mCAAmC,CAAC;AAC5D,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAgB,IAAI,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAEjF,OAAO,EAAE,kBAAkB,EAAuB,MAAM,wCAAwC,CAAC;AACjG,OAAO,EAAE,IAAI,EAAE,MAAM,0BAA0B,CAAC;AAChD,OAAO,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;AAElD;;GAEG;AAKH,MAAM,OAAO,OAAO;;IAClB;;OAEG;IACH,uBAAkB,GAAG,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC;;;EAclD,iBAAiB,KAAI,CAAC;EACtB,oBAAoB;IAClB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;EACtB,CAAC;EAGO,KAAK;IACX,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;EACrB,CAAC;EAED,MAAM;IAEJ,OAAO;MACL,cAAQ,KAAK,EAAC,kBAAkB;QAE5B,IAAI,CAAC,KAAK,CAAC,CAAC;UACV,YAAM,KAAK,EAAC,iBAAiB,IAAE,IAAI,CAAC,KAAK,CAAQ,CAAC,CAAC;UACnD,YAAM,IAAI,EAAC,aAAa,GAAG;QAE/B,iBAAW,IAAI,EAAC,OAAO,EAAC,KAAK,EAAC,SAAS,EAAC,KAAK,EAAC,OAAO,qBAAW,OAAO,EAAE,IAAI,CAAC,KAAK;UACjF,EAAC,QAAQ,IAAC,IAAI,EAAE,OAAO,GAAI,CACjB,CACL;MACT,eAAS,KAAK,EAAC,mBAAmB;QAChC,eAAQ,CACA;MACV,cAAQ,KAAK,EAAC,kBAAkB;QAC9B,YAAM,IAAI,EAAC,eAAe,GAAG,CACtB;KACV,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF;AAzBS;EADP,IAAI;oCAGJ","sourcesContent":["import { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { Component, Element, Event, EventEmitter, Prop, h } from '@stencil/core';\r\n\r\nimport { TransitionBehavior, TransitionComponent } from '../../../behaviors/transition-behavior';\r\nimport { Bind } from '../../../utils/lang/bind';\r\nimport { AcFaIcon } from '../../utils/ac-fa-icon';\r\n\r\n/**\r\n * Accera's full-featured modal web-component.\r\n */\r\n@Component({\r\n  tag: 'ac-modal',\r\n  styleUrl: 'ac-modal.scss',\r\n})\r\nexport class AcModal implements TransitionComponent {\r\n  /**\r\n   * The instance of the transition behavior used to animate this component.\r\n   */\r\n  transitionBehavior = new TransitionBehavior(this);\r\n\r\n  @Element() host: HTMLAcModalElement;\r\n\r\n  /**\r\n   * The title that will be displayed on the modal.\r\n   */\r\n  @Prop() title: string;\r\n\r\n  /**\r\n   * Dispatched when the modal closes.\r\n   */\r\n  @Event({ eventName: 'close' }) closeEv: EventEmitter<void>;\r\n\r\n  componentWillLoad() {}\r\n  disconnectedCallback() {\r\n    this.closeEv.emit();\r\n  }\r\n\r\n  @Bind\r\n  private close() {\r\n    this.host.remove();\r\n  }\r\n\r\n  render() {\r\n\r\n    return [\r\n      <header class=\"ac-modal__header\">\r\n        {\r\n          this.title ?\r\n            <span class=\"ac-modal__title\">{this.title}</span> :\r\n            <slot name=\"modal-title\" />\r\n        }\r\n        <ac-button fill=\"clear\" theme=\"primary\" shape=\"round\" icon-only onClick={this.close}>\r\n          <AcFaIcon icon={faTimes} />\r\n        </ac-button>\r\n      </header>,\r\n      <section class=\"ac-modal__content\">\r\n        <slot />\r\n      </section>,\r\n      <footer class=\"ac-modal__footer\">\r\n        <slot name=\"modal-actions\" />\r\n      </footer>\r\n    ];\r\n  }\r\n}\r\n"]}