{"version":3,"names":["TransitionBehavior","ComponentBehavior","constructor","this","removeIsQueued","beforeAttach","extendMethod","component","async","componentWillLoad","host","classList","add","animate","then","wait","componentWillEnter","replace","remove","customRemoveFn","bind","detach","allChildren","getElementsByClassName","Promise","all","Array","from","map","child","componentWillLeave","Element","prototype","apply"],"sources":["./src/behaviors/transition-behavior.ts"],"sourcesContent":["import { animate, wait } from '../utils/animation';\r\nimport { extendMethod } from '../utils/lang/extend-method';\r\nimport { ComponentBase, ComponentBehavior } from '../utils/stencil/component-behavior';\r\n\r\n/**\r\n * Implements hooks to control the transitions states, such as entering and leaving.\r\n * Useful for CSS animations. CSS classes are provided, controlled by it state:\r\n * - `transition--before-enter` The state before the component enters on the screen.\r\n * - `transition--after-enter` The state after the component enters on the screen.\r\n * - `transition--before-leave` The state before the component leave the screen.\r\n */\r\nexport class TransitionBehavior extends ComponentBehavior<TransitionComponent> {\r\n  removeIsQueued = false;\r\n\r\n  /**\r\n   * Applies a mokeypatch of componentWillLoad to add the transition hooks. Also, it dispatch the CSS transitions.\r\n   */\r\n  beforeAttach() {\r\n    extendMethod(this.component, 'componentWillLoad', async componentWillLoad => {\r\n      this.component.host.classList.add('transition--before-enter');\r\n      await animate(this.component.host).then(wait());\r\n      if (componentWillLoad) { return componentWillLoad(); }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Execute the componentWillEnter transition.\r\n   * Also, it applies a mokeypatch of the native Element#remove function to add the transition hooks.\r\n   */\r\n  async attach() {\r\n    if (this.component.componentWillEnter) { await this.component.componentWillEnter(); }\r\n    this.component.host.classList.replace('transition--before-enter', 'transition--after-enter');\r\n\r\n    // Monkeypatch native Element#remove.\r\n    // This function will wait for transitions.\r\n    this.component.host.remove = this.customRemoveFn.bind(this);\r\n  }\r\n\r\n  detach() {}\r\n\r\n  /**\r\n   * A custom remove teardown used to replace the native HTMLElement#remove, dispatching the CSS transitions.\r\n   */\r\n  async customRemoveFn() {\r\n    if (!this.removeIsQueued) {\r\n      this.removeIsQueued = true;\r\n\r\n      // Deep animations\r\n      const allChildren = this.component.host.getElementsByClassName('transition--after-enter');\r\n      await Promise.all(Array.from(allChildren).map(child => child.remove()));\r\n\r\n      this.component.host.classList.add('transition--before-leave');\r\n      if (this.component.componentWillLeave) { await this.component.componentWillLeave(); }\r\n\r\n      await animate(this.component.host).then(wait());\r\n      Element.prototype.remove.apply(this.component.host);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Represents a Component that implements the Transition Behavior in it.\r\n */\r\nexport interface TransitionComponent extends ComponentBase {\r\n  /**\r\n   * The behavior instance itself applied to the component.\r\n   */\r\n  transitionBehavior: TransitionBehavior;\r\n\r\n  /**\r\n   * A hook dispatched when the component loads. Supporting async operations.\r\n   */\r\n  componentWillLoad: () => Promise<void> | void;\r\n\r\n  /**\r\n   * A hook dispatched when the component appears on the screen.\r\n   */\r\n  componentWillEnter?: () => Promise<any> | void;\r\n\r\n  /**\r\n   * A hook dispatched when the component leaves the screen.\r\n   */\r\n  componentWillLeave?: () => Promise<any> | void;\r\n}\r\n"],"mappings":"4FAWaA,UAA2BC,EAAxCC,c,oBACEC,KAAAC,eAAiB,K,CAKjBC,eACEC,EAAaH,KAAKI,UAAW,qBAAqBC,MAAMC,IACtDN,KAAKI,UAAUG,KAAKC,UAAUC,IAAI,kCAC5BC,EAAQV,KAAKI,UAAUG,MAAMI,KAAKC,KACxC,GAAIN,EAAmB,CAAE,OAAOA,G,KAQpCD,eACE,GAAIL,KAAKI,UAAUS,mBAAoB,OAAQb,KAAKI,UAAUS,oB,CAC9Db,KAAKI,UAAUG,KAAKC,UAAUM,QAAQ,2BAA4B,2BAIlEd,KAAKI,UAAUG,KAAKQ,OAASf,KAAKgB,eAAeC,KAAKjB,K,CAGxDkB,SAAM,CAKNb,uBACE,IAAKL,KAAKC,eAAgB,CACxBD,KAAKC,eAAiB,KAGtB,MAAMkB,EAAcnB,KAAKI,UAAUG,KAAKa,uBAAuB,iCACzDC,QAAQC,IAAIC,MAAMC,KAAKL,GAAaM,KAAIC,GAASA,EAAMX,YAE7Df,KAAKI,UAAUG,KAAKC,UAAUC,IAAI,4BAClC,GAAIT,KAAKI,UAAUuB,mBAAoB,OAAQ3B,KAAKI,UAAUuB,oB,OAExDjB,EAAQV,KAAKI,UAAUG,MAAMI,KAAKC,KACxCgB,QAAQC,UAAUd,OAAOe,MAAM9B,KAAKI,UAAUG,K"}