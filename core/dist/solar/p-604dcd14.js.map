{"version":3,"names":["NativeDelegate","createComponent","tag","options","component","componentProps","props","__rest$1","element","document","createElement","Object","keys","forEach","key","setAttribute","innerHTML","assign","appendChild","async","domRoot","componentOnReady","detachViewFromDom","remove","nativeDelegate","ControllerBehavior","ComponentBehavior","attach","this","root","querySelector","bound","host","parentElement","detach","dismissAll","customDelegate","wrapper","render","__rest","delegate","Promise","res","vchildren","ref","Tag","target","controller","_resolveDismiss","_resolveWillDismiss","onDidDismiss","onWillDismiss","dismiss","data","canDismiss","willDismissComponent","attachViewToDom"],"sources":["./src/behaviors/controller-behavior/delegates/native-delegate.ts","./src/behaviors/controller-behavior/controller-behavior.ts"],"sourcesContent":["import { HTMLStencilElement } from '@stencil/core/internal';\r\nimport { FrameworkDelegate } from './framework-delegate';\r\n\r\n/**\r\n * The default framework delegate.\r\n */\r\nexport class NativeDelegate implements FrameworkDelegate {\r\n  createComponent<E extends HTMLStencilElement>(tag: string, options): E {\r\n    const { component, componentProps, ...props } = options;\r\n\r\n    const element = document.createElement(tag) as E;\r\n    if (props) {\r\n      Object.keys(props).forEach(key => {\r\n        if (typeof props[key] === 'string') {\r\n          element.setAttribute(key, props[key]);\r\n        } else {\r\n          element[key] = props[key];\r\n        }\r\n      });\r\n    }\r\n\r\n    if (component) {\r\n      if (typeof component === 'string') {\r\n        element.innerHTML = component;\r\n      } else {\r\n        // The component is a HTMLElement:\r\n        if (componentProps) {\r\n          Object.assign(component, componentProps);\r\n        }\r\n        element.appendChild(component);\r\n      }\r\n    }\r\n\r\n    return element;\r\n  }\r\n\r\n  async attachViewToDom(domRoot: HTMLElement, element) {\r\n    domRoot.appendChild(element);\r\n    await element.componentOnReady();\r\n  }\r\n\r\n  // @ts-ignore\r\n  detachViewFromDom(element: any, props): Promise<void> {\r\n      return element.remove();\r\n  }\r\n}\r\n\r\nexport const nativeDelegate = new NativeDelegate();\r\n","import { VNode } from '@stencil/core';\r\nimport { HTMLStencilElement } from '@stencil/core/internal';\r\n\r\nimport { FieldsOf } from '../../utils/lang/types';\r\nimport { ComponentBase, ComponentBehavior } from '../../utils/stencil/component-behavior';\r\n\r\nimport { FrameworkDelegate } from './delegates/framework-delegate';\r\nimport { nativeDelegate } from './delegates/native-delegate';\r\n\r\n/**\r\n * Used to implement a Controller Component logic.\r\n * A controller component is a singleton that can make operations in a context of all the layout,\r\n * breaking the atomic design.\r\n * Use it to create modals, toasts, floating panels etc.\r\n * This was based on the abstraction from Ionic Team.\r\n */\r\nexport class ControllerBehavior<C, E extends HTMLStencilElement> extends ComponentBehavior<ControllerComponent<C, E>> {\r\n  /**\r\n   * The element that it is bounded.\r\n   */\r\n  root: HTMLElement;\r\n\r\n  /**\r\n   * Bound the controller to the provided bound or to the parentElement.\r\n   */\r\n  attach() {\r\n    this.root = document.querySelector(this.component.bound) || this.component.host.parentElement;\r\n  }\r\n\r\n  /**\r\n   * Clear the controller before unload.\r\n   */\r\n  detach(): Promise<any> | void {\r\n    // @ts-ignore\r\n    return this.component.dismissAll ? this.component.dismissAll() : null;\r\n  }\r\n\r\n  /**\r\n   * Create a new element by the Controller's managed target and append it to the bound parent.\r\n   * @param options The properties based on the target component.\r\n   * @param customDelegate A custom DOM api used to attach the component.\r\n   */\r\n  async create(\r\n    options: ControllerComponentOptions<C>,\r\n    customDelegate?: FrameworkDelegate\r\n  ): Promise<E & HTMLStencilControlledElement<C, E>> {\r\n\r\n    const { wrapper, render, ...props } = options;\r\n    const delegate = customDelegate || nativeDelegate;\r\n\r\n    if (render) {\r\n      // Using a portal\r\n      return new Promise(res => {\r\n        wrapper.vchildren = render({ ref: res, Tag: this.component.target });\r\n        this.root.appendChild(wrapper);\r\n      });\r\n    } else {\r\n      // Using delegate\r\n      const element =\r\n        await delegate.createComponent<E & HTMLStencilControlledElement<C, E>>(this.component.target, props);\r\n\r\n      element.controller = this.component;\r\n      element._resolveDismiss = null;\r\n      element._resolveWillDismiss = null;\r\n      element.onDidDismiss = () => new Promise(res => element._resolveDismiss = res);\r\n      element.onWillDismiss = () => new Promise(res => element._resolveWillDismiss = res);\r\n      element.dismiss = async data => {\r\n        let canDismiss = true;\r\n        if (this.component.willDismissComponent) {\r\n          canDismiss = await this.component.willDismissComponent(element, data);\r\n        }\r\n        if (canDismiss) {\r\n          if (element._resolveWillDismiss) {\r\n            await element._resolveWillDismiss(data);\r\n          }\r\n          if (wrapper) {\r\n            await delegate.detachViewFromDom(wrapper, props);\r\n          } else {\r\n            await delegate.detachViewFromDom(element, props);\r\n          }\r\n          if (element._resolveDismiss) {\r\n            await element._resolveDismiss(data);\r\n          }\r\n        }\r\n      };\r\n\r\n      if (wrapper) {\r\n        wrapper.appendChild(element);\r\n        await delegate.attachViewToDom(this.root, wrapper);\r\n      } else {\r\n        await delegate.attachViewToDom(this.root, element);\r\n      }\r\n\r\n      return element;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Represents a Controller Component that will manage to create a new target component.\r\n */\r\nexport interface ControllerComponent<C, E extends HTMLStencilElement> extends ComponentBase {\r\n  /**\r\n   * The instance of this behaviour.\r\n   */\r\n  controllerBehavior: ControllerBehavior<C, E>;\r\n\r\n  /**\r\n   * The tag of the component that will be managed.\r\n   */\r\n  target: string;\r\n\r\n  /**\r\n   * An optional property used to refer the parent element that the component will be attached to.\r\n   * @Prop\r\n   */\r\n  bound: string;\r\n\r\n  /**\r\n   * Set properties to the managed component.\r\n   * @Method\r\n   */\r\n  create(props: ControllerComponentOptions<C>): Promise<E & HTMLStencilControlledElement<C, E>>;\r\n\r\n  /**\r\n   * Clear properties of the managed component.\r\n   * @Method\r\n   */\r\n  dismiss(data?: any): Promise<void>;\r\n\r\n  willDismissComponent?(element: E & HTMLStencilControlledElement<C, E>, data?: any): Promise<boolean>;\r\n}\r\n\r\n/**\r\n * Represents the custom props that can be passed to a controlled component.\r\n */\r\nexport type ControllerComponentOptions<C> = FieldsOf<C> & {\r\n  component?: any;\r\n  componentProps?: any;\r\n  wrapper?: any;\r\n  render?: (data) => VNode;\r\n  [key: string]: any;\r\n};\r\n\r\nexport interface ControlledElementFields {\r\n  onDidDismiss?: <T>() => Promise<T>;\r\n  onWillDismiss?: <T>() => Promise<T>;\r\n  dismiss?: (data: any) => Promise<void>;\r\n  present?: () => Promise<void>;\r\n}\r\n\r\n/**\r\n * Represents a Component that was created by a Controller.\r\n */\r\nexport type HTMLStencilControlledElement<C, E extends HTMLStencilElement> = E & ControlledElementFields & {\r\n  _resolveDismiss: (data) => void;\r\n  _resolveWillDismiss: (data) => void;\r\n  controller: ControllerComponent<C, E>;\r\n};\r\n"],"mappings":"wZAMaA,EACXC,gBAA8CC,EAAaC,GACzD,MAAMC,UAAEA,EAASC,eAAEA,GAA6BF,EAAVG,EAAKC,EAAKJ,EAA1C,gCAEN,MAAMK,EAAUC,SAASC,cAAcR,GACvC,GAAII,EAAO,CACTK,OAAOC,KAAKN,GAAOO,SAAQC,IACzB,UAAWR,EAAMQ,KAAS,SAAU,CAClCN,EAAQO,aAAaD,EAAKR,EAAMQ,G,KAC3B,CACLN,EAAQM,GAAOR,EAAMQ,E,KAK3B,GAAIV,EAAW,CACb,UAAWA,IAAc,SAAU,CACjCI,EAAQQ,UAAYZ,C,KACf,CAEL,GAAIC,EAAgB,CAClBM,OAAOM,OAAOb,EAAWC,E,CAE3BG,EAAQU,YAAYd,E,EAIxB,OAAOI,C,CAGTW,sBAAsBC,EAAsBZ,GAC1CY,EAAQF,YAAYV,SACdA,EAAQa,kB,CAIhBC,kBAAkBd,EAAcF,GAC5B,OAAOE,EAAQe,Q,EAId,MAAMC,EAAiB,IAAIxB,E,oXC/BrByB,UAA4DC,EASvEC,SACEC,KAAKC,KAAOpB,SAASqB,cAAcF,KAAKxB,UAAU2B,QAAUH,KAAKxB,UAAU4B,KAAKC,a,CAMlFC,SAEE,OAAON,KAAKxB,UAAU+B,WAAaP,KAAKxB,UAAU+B,aAAe,I,CAQnEhB,aACEhB,EACAiC,GAGA,MAAMC,QAAEA,EAAOC,OAAEA,GAAqBnC,EAAVG,EAAKiC,EAAKpC,EAAhC,sBACN,MAAMqC,EAAWJ,GAAkBZ,EAEnC,GAAIc,EAAQ,CAEV,OAAO,IAAIG,SAAQC,IACjBL,EAAQM,UAAYL,EAAO,CAAEM,IAAKF,EAAKG,IAAKjB,KAAKxB,UAAU0C,SAC3DlB,KAAKC,KAAKX,YAAYmB,EAAQ,G,KAE3B,CAEL,MAAM7B,QACEgC,EAASvC,gBAAwD2B,KAAKxB,UAAU0C,OAAQxC,GAEhGE,EAAQuC,WAAanB,KAAKxB,UAC1BI,EAAQwC,gBAAkB,KAC1BxC,EAAQyC,oBAAsB,KAC9BzC,EAAQ0C,aAAe,IAAM,IAAIT,SAAQC,GAAOlC,EAAQwC,gBAAkBN,IAC1ElC,EAAQ2C,cAAgB,IAAM,IAAIV,SAAQC,GAAOlC,EAAQyC,oBAAsBP,IAC/ElC,EAAQ4C,QAAUjC,MAAMkC,IACtB,IAAIC,EAAa,KACjB,GAAI1B,KAAKxB,UAAUmD,qBAAsB,CACvCD,QAAmB1B,KAAKxB,UAAUmD,qBAAqB/C,EAAS6C,E,CAElE,GAAIC,EAAY,CACd,GAAI9C,EAAQyC,oBAAqB,OACzBzC,EAAQyC,oBAAoBI,E,CAEpC,GAAIhB,EAAS,OACLG,EAASlB,kBAAkBe,EAAS/B,E,KACrC,OACCkC,EAASlB,kBAAkBd,EAASF,E,CAE5C,GAAIE,EAAQwC,gBAAiB,OACrBxC,EAAQwC,gBAAgBK,E,IAKpC,GAAIhB,EAAS,CACXA,EAAQnB,YAAYV,SACdgC,EAASgB,gBAAgB5B,KAAKC,KAAMQ,E,KACrC,OACCG,EAASgB,gBAAgB5B,KAAKC,KAAMrB,E,CAG5C,OAAOA,C"}