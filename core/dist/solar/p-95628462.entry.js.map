{"version":3,"names":["acDropDownMenuCss","AcDropDownMenu","this","SelectPanel","createControllerPortal","ensureController","focusBehavior","FocusBehavior","isShowingPanelDidUpdate","hasFocus","isPanelOpen","componentDidLoad","options","length","Array","from","host","querySelectorAll","map","option","label","innerText","trim","value","image","isNil","disconnectedCallback","whenBlur","element","selectPanel","contains","handlePanel","handleSelect","selectChange","emit","render","filterSelected","toString","h","Host","class","style","display","filter","x","compact","theme","onClick","fill","slot","src","AcFaIcon","icon","faChevronUp","faChevronDown","size","ref","popperPivot","reset","__decorate","Bind"],"sources":["./src/components/molecules/ac-drop-down-menu/ac-drop-down-menu.scss?tag=ac-drop-down-menu","./src/components/molecules/ac-drop-down-menu/ac-drop-down-menu.tsx"],"sourcesContent":["@import \"../../../theme/variables\";\r\n@import \"../../../global/css/layout\";\r\n\r\nac-drop-down-menu {\r\n  display: flex;\r\n  flex: 1;\r\n  height: 44px;\r\n  padding: 0 !important;\r\n\r\n  .ac-drop-down-menu--compact {\r\n    .ac-button__native {\r\n      transition: all .2s ease !important;\r\n      padding: 0 ($spacer-tiny - 2) 0 !important;\r\n      span {\r\n        display: none;\r\n      }\r\n      svg {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  .ac-drop-down-menu__button {\r\n    display: flex;\r\n    flex: 1;\r\n    align-items: center;\r\n    .ac-button__native {\r\n      padding: 0 $spacer-tiny 0;\r\n      width: 100%;\r\n    }\r\n\r\n    .ac-button__text {\r\n      flex: 1;\r\n      text-align: left;\r\n    }\r\n  }\r\n}\r\n\r\n.ac-drop-down-menu__list--compact {\r\n  .ac-list__item {\r\n    place-content: center center;\r\n    flex-direction: column;\r\n  }\r\n}\r\n","import { faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { Component, Element, Event, EventEmitter, Host, Prop, State, Watch, h } from '@stencil/core';\r\nimport { isNil } from 'ramda';\r\n\r\nimport { createControllerPortal } from '../../../behaviors/controller-behavior/create-controller-portal';\r\nimport { FocusBehavior } from '../../../behaviors/focus-behavior';\r\nimport { Bind } from '../../../utils/lang/bind';\r\nimport { ensureController } from '../../../utils/stencil/ensure-controller';\r\nimport { AcPanel } from '../../organisms/ac-panel/ac-panel';\r\nimport { AcPopper } from '../../portals/ac-popper/ac-popper';\r\nimport { AcFaIcon } from '../../utils/ac-fa-icon';\r\n\r\nimport { AcDropOption } from './ac-drop-option';\r\n\r\n@Component({\r\n  tag: 'ac-drop-down-menu',\r\n  styleUrl: './ac-drop-down-menu.scss'\r\n})\r\nexport class AcDropDownMenu {\r\n  /**\r\n   * A reference to the ac-panel.\r\n   */\r\n  private selectPanel: HTMLAcPanelElement;\r\n  /**\r\n   * Internal reference to the select panel.\r\n   */\r\n  private SelectPanel = createControllerPortal<AcPanel & AcPopper>(ensureController('ac-panel-controller'));\r\n  /**\r\n   * Reference to the component element.\r\n   */\r\n  @Element() host: HTMLAcDropDownMenuElement;\r\n  /**\r\n   * List of all options.\r\n   */\r\n  @Prop() options: AcDropOption[] = [];\r\n  /**\r\n   * Value of selected option.\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) value: any;\r\n  /**\r\n   * Compact mode.\r\n   */\r\n  @Prop({ mutable: true }) compact: boolean;\r\n  /**\r\n   * Event call on option change.\r\n   */\r\n  @Event() selectChange: EventEmitter\r\n  /**\r\n   * Flag to control input focus.\r\n   */\r\n  hasFocus: boolean;\r\n  /**\r\n   * The instance of the FocusBehavior used to close the panel when the user clicks outside.\r\n   */\r\n  focusBehavior = new FocusBehavior(this);\r\n  /**\r\n   * Flag that control the panel visibility.\r\n   */\r\n  @State() isPanelOpen = false;\r\n\r\n  @Watch('isPanelOpen')\r\n  isShowingPanelDidUpdate() {\r\n    this.hasFocus = this.isPanelOpen;\r\n  }\r\n  componentDidLoad() {\r\n    if (this.options.length === 0) {\r\n      this.options = Array.from(this.host.querySelectorAll('ac-drop-option'))\r\n        .map((option: any) => {\r\n          return {\r\n          label: option.label || option.innerText.trim(),\r\n          value: option.value,\r\n          image: option.image\r\n        } as AcDropOption });\r\n      }\r\n    if (isNil(this.value) && this.options.length > 0) {\r\n        this.value = this.options[0].value;\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.isPanelOpen = false;\r\n  }\r\n  /**\r\n   * Toggle the panel view.\r\n   */\r\n  @Bind\r\n  whenBlur(element) {\r\n    // If the target element is'nt a child of the panel.\r\n    if (!this.selectPanel.contains(element)) {\r\n      if (this.isPanelOpen) {\r\n        this.isPanelOpen = !this.isPanelOpen;\r\n      }\r\n    }\r\n  }\r\n\r\n  @Bind\r\n  handlePanel() {\r\n    this.isPanelOpen = !this.isPanelOpen;\r\n  }\r\n\r\n  handleSelect(option: AcDropOption) {\r\n    this.isPanelOpen = !this.isPanelOpen;\r\n    this.value = option.value;\r\n    this.selectChange.emit(option);\r\n  }\r\n\r\n  render() {\r\n    const filterSelected = option => {\r\n      if (isNil(this.value)) {\r\n        return false;\r\n      }\r\n      if (isNil(option.value)) {\r\n        return false;\r\n      }\r\n      return option.value.toString() === this.value.toString()\r\n    };\r\n    const SelectPanel = this.SelectPanel;\r\n    return <Host class={{ 'ac-list': true }}>\r\n      <section style={{ display: 'none' }}>\r\n        <slot />\r\n      </section>\r\n      {this.options && this.options\r\n        .filter(filterSelected)\r\n        .map(x => (\r\n            <ac-button\r\n              class={{ 'ac-drop-down-menu__button': true, 'ac-drop-down-menu--compact': this.compact }}\r\n              theme={this.isPanelOpen ? 'primary' : 'light'}\r\n              onClick={this.handlePanel}\r\n              fill=\"flat\"\r\n            >\r\n                {x.image && <img slot=\"icon-start\" src={x.image} />}\r\n                <span>{x.label}</span>\r\n                {this.options.length > 0\r\n                  && <AcFaIcon slot=\"icon-end\" icon={this.isPanelOpen ? faChevronUp : faChevronDown} size={12} />}\r\n            </ac-button>\r\n        ))}\r\n      <SelectPanel\r\n        ref={selectPanel => this.selectPanel = selectPanel}\r\n        popperPivot={this.host}\r\n        reset={!this.isPanelOpen}\r\n      >\r\n          <ul class={{ 'ac-list': true, 'ac-drop-down-menu__list--compact': this.compact }}>\r\n            {this.options.map(option => (\r\n              <ac-drop-option class=\"ac-list__item\" label={option.label} onClick={() => this.handleSelect(option)}>\r\n                {option.image && <img src={option.image} slot=\"image\" class=\"ac-drop-down__image\" />}\r\n              </ac-drop-option>\r\n            ))}\r\n          </ul>\r\n      </SelectPanel>\r\n    </Host>\r\n  }\r\n}\r\n"],"mappings":"sYAAA,MAAMA,EAAoB,+uoC,iXCkBbC,EAAc,M,oEAQjBC,KAAAC,YAAcC,EAA2CC,EAAiB,wBA4BlFH,KAAAI,cAAgB,IAAIC,EAAcL,M,aApBA,G,6DAwBX,K,CAGvBM,0BACEN,KAAKO,SAAWP,KAAKQ,W,CAEvBC,mBACE,GAAIT,KAAKU,QAAQC,SAAW,EAAG,CAC7BX,KAAKU,QAAUE,MAAMC,KAAKb,KAAKc,KAAKC,iBAAiB,mBAClDC,KAAKC,IACG,CACPC,MAAOD,EAAOC,OAASD,EAAOE,UAAUC,OACxCC,MAAOJ,EAAOI,MACdC,MAAOL,EAAOK,S,CAGpB,GAAIC,EAAMvB,KAAKqB,QAAUrB,KAAKU,QAAQC,OAAS,EAAG,CAC9CX,KAAKqB,MAAQrB,KAAKU,QAAQ,GAAGW,K,EAInCG,uBACExB,KAAKQ,YAAc,K,CAMrBiB,SAASC,GAEP,IAAK1B,KAAK2B,YAAYC,SAASF,GAAU,CACvC,GAAI1B,KAAKQ,YAAa,CACpBR,KAAKQ,aAAeR,KAAKQ,W,GAM/BqB,cACE7B,KAAKQ,aAAeR,KAAKQ,W,CAG3BsB,aAAab,GACXjB,KAAKQ,aAAeR,KAAKQ,YACzBR,KAAKqB,MAAQJ,EAAOI,MACpBrB,KAAK+B,aAAaC,KAAKf,E,CAGzBgB,SACE,MAAMC,EAAiBjB,IACrB,GAAIM,EAAMvB,KAAKqB,OAAQ,CACrB,OAAO,K,CAET,GAAIE,EAAMN,EAAOI,OAAQ,CACvB,OAAO,K,CAET,OAAOJ,EAAOI,MAAMc,aAAenC,KAAKqB,MAAMc,UAAU,EAE1D,MAAMlC,EAAcD,KAAKC,YACzB,OAAOmC,EAACC,EAAI,CAACC,MAAO,CAAE,UAAW,OAC/BF,EAAA,WAASG,MAAO,CAAEC,QAAS,SACzBJ,EAAA,cAEDpC,KAAKU,SAAWV,KAAKU,QACnB+B,OAAOP,GACPlB,KAAI0B,GACDN,EAAA,aACEE,MAAO,CAAE,4BAA6B,KAAM,6BAA8BtC,KAAK2C,SAC/EC,MAAO5C,KAAKQ,YAAc,UAAY,QACtCqC,QAAS7C,KAAK6B,YACdiB,KAAK,QAEFJ,EAAEpB,OAASc,EAAA,OAAKW,KAAK,aAAaC,IAAKN,EAAEpB,QAC1Cc,EAAA,YAAOM,EAAExB,OACRlB,KAAKU,QAAQC,OAAS,GAClByB,EAACa,EAAQ,CAACF,KAAK,WAAWG,KAAMlD,KAAKQ,YAAc2C,EAAcC,EAAeC,KAAM,QAGrGjB,EAACnC,EAAW,CACVqD,IAAK3B,GAAe3B,KAAK2B,YAAcA,EACvC4B,YAAavD,KAAKc,KAClB0C,OAAQxD,KAAKQ,aAEX4B,EAAA,MAAIE,MAAO,CAAE,UAAW,KAAM,mCAAoCtC,KAAK2C,UACpE3C,KAAKU,QAAQM,KAAIC,GAChBmB,EAAA,kBAAgBE,MAAM,gBAAgBpB,MAAOD,EAAOC,MAAO2B,QAAS,IAAM7C,KAAK8B,aAAab,IACzFA,EAAOK,OAASc,EAAA,OAAKY,IAAK/B,EAAOK,MAAOyB,KAAK,QAAQT,MAAM,6B,mGA1D1EmB,EAAA,CADCC,G,6BAWDD,EAAA,CADCC,G"}