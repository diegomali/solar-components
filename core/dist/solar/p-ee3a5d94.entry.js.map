{"version":3,"names":["AcModalController","this","controllerBehavior","ControllerBehavior","target","async","props","wrapper","document","createElement","backdrop","position","mode","navDrawer","create","Object","assign","showToggle","addEventListener","remove","ScrollManager","enable","disable","disconnectedCallback"],"sources":["./src/components/atoms/ac-navdrawer/ac-navdrawer-controller/ac-navdrawer-controller.tsx"],"sourcesContent":["import { Component, Element, Method, Prop } from '@stencil/core';\r\n\r\nimport {\r\n  ControllerBehavior,\r\n  ControllerComponent,\r\n  ControllerComponentOptions,\r\n} from '../../../../behaviors/controller-behavior/controller-behavior';\r\nimport { ScrollManager } from '../../../../utils/scroll-manager';\r\nimport { AcOverlay } from '../../../portals/ac-overlay/ac-overlay';\r\nimport { AcNavdrawer } from '../ac-navdrawer';\r\n\r\n/**\r\n * A controller that creates navdrawer on the screen.\r\n */\r\n@Component({\r\n  tag: 'ac-navdrawer-controller',\r\n})\r\nexport class AcModalController implements ControllerComponent<AcNavdrawer, HTMLAcNavdrawerElement> {\r\n  /**\r\n   * The instance of the controller behavior that setup the modals on the screen.\r\n   */\r\n  controllerBehavior = new ControllerBehavior(this);\r\n\r\n  target = 'ac-navdrawer';\r\n\r\n  @Element() host: HTMLElement;\r\n\r\n  @Prop() bound: string;\r\n\r\n\r\n  /**\r\n   * Setup a new navdrawer on the screen.\r\n   */\r\n  @Method()\r\n  async create(props: ControllerComponentOptions<AcNavdrawer & AcOverlay>) {\r\n    const wrapper = document.createElement('ac-overlay') as HTMLAcOverlayElement;\r\n    wrapper.backdrop = 'light';\r\n    wrapper.position = props.position;\r\n    props.wrapper = wrapper;\r\n    props.mode = 'over';\r\n    const navDrawer = await this.controllerBehavior.create({...props, showToggle: false});\r\n\r\n    wrapper.addEventListener('backDropClick', () => {\r\n      navDrawer.remove();\r\n    });\r\n\r\n    navDrawer.addEventListener('close', () => {\r\n      wrapper.remove();\r\n      ScrollManager.enable();\r\n    });\r\n    ScrollManager.disable();\r\n    return navDrawer;\r\n  }\r\n\r\n  /**\r\n   * Clear all modals that are displayed.\r\n   */\r\n  @Method()\r\n  async dismiss() {\r\n    return;\r\n  }\r\n\r\n  disconnectedCallback() {}\r\n}\r\n"],"mappings":"iJAiBaA,EAAiB,M,yBAI5BC,KAAAC,mBAAqB,IAAIC,EAAmBF,MAE5CA,KAAAG,OAAS,e,qBAWTC,aAAaC,GACX,MAAMC,EAAUC,SAASC,cAAc,cACvCF,EAAQG,SAAW,QACnBH,EAAQI,SAAWL,EAAMK,SACzBL,EAAMC,QAAUA,EAChBD,EAAMM,KAAO,OACb,MAAMC,QAAkBZ,KAAKC,mBAAmBY,OAAMC,OAAAC,OAAAD,OAAAC,OAAA,GAAKV,GAAK,CAAEW,WAAY,SAE9EV,EAAQW,iBAAiB,iBAAiB,KACxCL,EAAUM,QAAQ,IAGpBN,EAAUK,iBAAiB,SAAS,KAClCX,EAAQY,SACRC,EAAcC,QAAQ,IAExBD,EAAcE,UACd,OAAOT,C,CAOTR,gBACE,M,CAGFkB,uBAAoB,C"}