{"version":3,"names":["acOrderListCss","AcOrderList","this","setFilterText","text","filterText","handleOptionsChange","options","forEach","option","index","order","undefined","listChange","emit","updateSelectedOptions","multiple","filter","x","value","selected","handleSelect","e","stopImmediatePropagation","handleChecked","srcElement","classList","contains","async","Promise","resolve","componentDidLoad","loadOptionsFromHTML","listItems","Array","from","host","querySelectorAll","map","item","title","hasAttribute","separator","group","parentElement","tagName","label","render","renderList","h","style","display","class","length","type","placeholder","searchLabel","onChange","target","size","slot","fill","AcFaIcon","icon","faSearch","isEmpty","noResultsLabel","toUpperCase","includes","hasGroup","a","sort","b","reduce","state","has","set","elements","get","push","key","onClick","checked","Map","values","result","arr","splice","concat"],"sources":["./src/components/molecules/ac-order-list/ac-order-list.scss?tag=ac-order-list","./src/components/molecules/ac-order-list/ac-order-list.tsx"],"sourcesContent":["@import \"../../../theme/variables\";\r\n@import \"../../../global/css/layout\";\r\n\r\n\r\nac-order-list {\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  .ac-order-list__header-title {\r\n    height: 24px;\r\n    margin: 0 0 8px 0;\r\n    display: flex;\r\n    color: var-color(\"neutral\", \"darker\");\r\n  }\r\n\r\n  .ac-order-list__container {\r\n    display: flex;\r\n    flex: 1;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: inherit;\r\n    border: 1px solid var-color(\"neutral\", \"light\");\r\n    border-radius: $border-radius-default;\r\n  }\r\n\r\n  .ac-order-list__search-bar {\r\n    width: 100%;\r\n    border-top: none;\r\n    border-left: none;\r\n    border-right: none;\r\n    border-bottom-width: 1px;\r\n    margin-bottom: $spacer-small;\r\n\r\n    .ac-input__native {\r\n      padding-left: 0 !important;\r\n    }\r\n\r\n    .ac-order-list__search-bar-icon {\r\n      fill: var-color(\"neutral\", \"dark\");\r\n    }\r\n  }\r\n\r\n  .ac-list {\r\n      .ac-order-list__checkbox {\r\n        padding-right: $spacer-tiny;\r\n      }\r\n\r\n      &.ac-list__item--empty {\r\n        display: flex;\r\n        flex: 1;\r\n        align-items: center;\r\n        justify-content: center;\r\n\r\n      }\r\n    }\r\n}","import { Component, Prop, Method, Element, h, EventEmitter, Event, Watch } from '@stencil/core';\r\nimport { AcFaIcon } from '../../utils/ac-fa-icon';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { isEmpty } from 'ramda';\r\nimport { AcOption } from '../../../utils/types/ac-option';\r\n\r\n@Component({\r\n  tag: 'ac-order-list',\r\n  styleUrl: 'ac-order-list.scss'\r\n})\r\nexport class AcOrderList {\r\n  /**\r\n   * Reference to the component\r\n   */\r\n  @Element() host: HTMLAcOrderListElement;\r\n\r\n  @Prop() filterText: string;\r\n  /**\r\n   * List of all options available.\r\n   */\r\n  @Prop({ mutable: true }) options: AcOption[];\r\n  /**\r\n   * Used to customize the searchbar's label\r\n   */\r\n  @Prop() searchLabel: string;\r\n  /**\r\n   * Used to customize the field label\r\n   */\r\n  @Prop() label: string;\r\n  /**\r\n   * Message that will be rendered with the search results in zero items\r\n   */\r\n  @Prop() noResultsLabel: string;\r\n  /**\r\n   * If true, the component will handle multiple selected items.\r\n   */\r\n  @Prop({ reflect: true }) multiple: boolean = false;\r\n\r\n  /**\r\n   * Event trigger on state change\r\n   * @param {AcList} acList - Component.\r\n   */\r\n  @Event() listChange: EventEmitter<AcOrderList>;\r\n\r\n\r\n  @Watch('options')\r\n  handleOptionsChange() {\r\n    this.options\r\n      .forEach((option, index) => {\r\n        if (option.order === undefined) {\r\n          option.order = index;\r\n        }\r\n      });\r\n    this.listChange.emit(this);\r\n  }\r\n\r\n  private updateSelectedOptions(option) {\r\n    if (this.multiple === false) {\r\n      this.options.filter(x => x.value !== option.value).forEach(x => x.selected = false);\r\n    }\r\n    option.selected = !option.selected;\r\n    this.options = [ ...this.options ];\r\n    this.listChange.emit(this);\r\n  }\r\n\r\n  handleSelect(e, option) {\r\n    e.stopImmediatePropagation();\r\n    this.updateSelectedOptions(option);\r\n  }\r\n\r\n  handleChecked(e, option) {\r\n    /* TODO: review ac-check fire more than once */\r\n    e.stopImmediatePropagation();\r\n    if (!e.srcElement.classList.contains('ac-check__native')) {\r\n      return;\r\n    }\r\n    if (this.multiple === false) {\r\n      this.options.filter(x => x.value !== option.value).forEach(x => x.selected = false);\r\n    }\r\n    this.updateSelectedOptions(option);\r\n  }\r\n\r\n  @Method()\r\n  async getSelectedOptions() {\r\n    return Promise.resolve(this.options.filter(x => x.selected));\r\n  }\r\n\r\n  componentDidLoad() {\r\n    if (!this.options) {\r\n      this.loadOptionsFromHTML();\r\n    }\r\n  }\r\n\r\n  loadOptionsFromHTML() {\r\n    const listItems = Array.from(this.host.querySelectorAll('option'));\r\n    if (listItems) {\r\n      this.options = listItems\r\n      .map((item: any) => {\r\n        return ({\r\n          title: item.text,\r\n          value: item.value,\r\n          selected: item.hasAttribute('selected') ? item.selected : false,\r\n          separator: false,\r\n          group: item.parentElement.tagName === 'OPTGROUP' ? item.parentElement.label : null\r\n        }) as AcOption\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    const listItems = this.renderList();\r\n    return [\r\n        <section style={{ display: 'none' }}>\r\n          <slot />\r\n        </section>,\r\n        <label class=\"ac-order-list__header-title\">\r\n          {this.label} ({this.options ? this.options.length : 0})\r\n        </label>,\r\n        <section class=\"ac-order-list__container\" >\r\n          <ac-input-base\r\n            class=\"ac-order-list__search-bar\"\r\n            type=\"text\"\r\n            placeholder={this.searchLabel}\r\n            value={this.filterText}\r\n            onChange={({ target: { value } }: any) => this.setFilterText(value)}\r\n            size=\"small\"\r\n          >\r\n            <ac-button\r\n              slot=\"item-start\"\r\n              fill=\"clear\"\r\n              icon-only\r\n            >\r\n              <AcFaIcon icon={faSearch} class=\"ac-list__search-bar-icon\" size={12}  />\r\n            </ac-button>\r\n          </ac-input-base>\r\n          <ol class=\"ac-list\">\r\n            {listItems.length > 0\r\n              ? listItems\r\n              : !isEmpty(this.filterText) && <li class=\"ac-list__item ac-list__list-item--empty\">{this.noResultsLabel}</li>\r\n            }\r\n          </ol>\r\n        </section>\r\n    ];\r\n  }\r\n\r\n  private renderList() {\r\n    if (this.options) {\r\n      const options = this.filterText\r\n        ? this.options.filter(option => option.title.toUpperCase().includes(this.filterText.toUpperCase()))\r\n        : this.options;\r\n      let hasGroup = false;\r\n      const a = options\r\n              .sort((a, b) => a.order > b.order ? 1 : -1)\r\n              .reduce((state, option) => {\r\n                if (!(state.has(option.group))) {\r\n                  hasGroup = hasGroup === false && !isEmpty(option.group) ? true : hasGroup;\r\n                  state.set(option.group, [(\r\n                    <li class=\"ac-list__separator\">\r\n                      <span class=\"ac-list__separator-title\">{option.group}</span>\r\n                      <span class=\"ac-list__separator-line\"></span>\r\n                    </li>\r\n                  )]);\r\n                }\r\n                const elements = state.has(option.group)\r\n                  ? state.get(option.group)\r\n                  : [];\r\n                elements.push((\r\n                  <li value={option.value}\r\n                      key={option.value}\r\n                      class={{\r\n                        \"ac-list__item\": true,\r\n                        \"ac-list__item--selected\": option.selected\r\n                      }}\r\n                      onClick={(e) => this.handleSelect(e, option)}>\r\n                    {this.multiple && <ac-check class=\"ac-order-list__checkbox\"\r\n                      checked={option.selected} onClick={(e) => this.handleChecked(e, option)}></ac-check>}\r\n                    {option.title}\r\n                  </li>\r\n                ));\r\n                state.set(option.group, elements);\r\n                return state;\r\n              }, new Map());\r\n      return Array.from(a.values()).reduce((result, arr) => {\r\n        if (hasGroup === false) {\r\n          arr.splice(0, 1);\r\n        }\r\n        return result.concat(arr);\r\n      } , []);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  private setFilterText = (text: string) => this.filterText = text;\r\n}\r\n"],"mappings":"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"}