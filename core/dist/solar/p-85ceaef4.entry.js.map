{"version":3,"names":["acInputBaseCss","AcInputBase","async","this","nativeInput","focus","handleFocus","host","dispatchEvent","Event","hasFocus","handleBlur","handleChange","value","render","h","Host","class","theme","size","label","disabled","error","name","ref","input","type","pattern","readonly","required","max","min","maxlength","minlength","autofocus","autocomplete","autocapitalize","placeholder","onChange","onFocus","onBlur","step","undefined","__decorate","Bind"],"sources":["./src/components/atoms/ac-input-base/ac-input-base.scss?tag=ac-input-base","./src/components/atoms/ac-input-base/ac-input-base.tsx"],"sourcesContent":["@import \"../../../theme/variables\";\r\n@import \"ac-input-base.vars\";\r\n\r\n// ---------------------------------------------------------------------------------------------------------------------\r\n// General Style\r\n// ---------------------------------------------------------------------------------------------------------------------\r\n\r\nac-input-base {\r\n  display: $ac-input-base__display;\r\n  min-height: $ac-input-base__min-height;\r\n  max-height: $ac-input-base__min-height;\r\n  overflow: hidden;\r\n  border: 2px solid var-color(\"neutral\", \"light\");\r\n  border-radius: $border-radius-default;\r\n  background-color: var-color(\"neutral\", \"contrast\");\r\n\r\n  .ac-input__input-container {\r\n    display: flex;\r\n    position: relative;\r\n    width: 100%;\r\n\r\n    .ac-input__label {\r\n      position: absolute;\r\n      top: 12px;\r\n      left: $spacer-small;\r\n      transition: font-size $default-transition, top $default-transition;\r\n      color: var-color(\"neutral\", \"darker\");\r\n      font-size: $font-small;\r\n      line-height: 1;\r\n      white-space: nowrap;\r\n      pointer-events: none;\r\n      user-select: none;\r\n    }\r\n\r\n    input.ac-input__native {\r\n      box-sizing: border-box;\r\n      width: 100%;\r\n      padding: 20px $spacer-small $spacer-tiny;\r\n      border: none;\r\n      background-color: transparent;\r\n      color: var-color(\"neutral\", \"inverted\");\r\n      font-size: $font-small;\r\n      line-height: 1;\r\n      &::placeholder {\r\n        color: current-color(\"contrast\", 0.6);\r\n      }\r\n\r\n      &:focus {\r\n        outline: none;\r\n      }\r\n    }\r\n  }\r\n\r\n  .ac-input__item-start, .ac-input__item-end {\r\n    display: flex !important;\r\n    align-items: center !important;\r\n    justify-content: center !important;\r\n\r\n    & > ac-input-base {\r\n      border: 0;\r\n      border-top: 2px;\r\n    }\r\n  }\r\n\r\n  .ac-input__item-start {\r\n    & > i, & > svg {\r\n      margin: 0 0 0 $spacer-small;\r\n    }\r\n  }\r\n\r\n  .ac-input__item-end {\r\n    & > ac-button .ac-button__native {\r\n      border: 0;\r\n      border-left: 2px solid var-color(\"neutral\", \"light\");\r\n      border-radius: 0;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ---------------------------------------------------------------------------------------------------------------------\r\n// State modifiers\r\n// ---------------------------------------------------------------------------------------------------------------------\r\n\r\n// No label\r\n// ---------------------------------------------------------\r\n\r\nac-input-base.ac-input-base--no-label {\r\n  input.ac-input__native {\r\n    padding: $spacer-tiny $spacer-small $spacer-tiny;\r\n  }\r\n}\r\n\r\n// Focused or Filled\r\n// ---------------------------------------------------------\r\n\r\nac-input-base.ac-input-base--focus,\r\nac-input-base.ac-input-base--filled {\r\n  .ac-input__label {\r\n    top: 4px;\r\n    font-size: $font-tiny;\r\n  }\r\n}\r\n\r\n\r\n// Small size (size=small)\r\n// ---------------------------------------------------------\r\n\r\nac-input-base.ac-input-base--small {\r\n  min-height: $ac-input-base--small__min-height;\r\n  max-height: $ac-input-base--small__min-height;\r\n\r\n  .ac-input__input-container {\r\n    input.ac-input__native {\r\n      padding: $spacer-tiny $spacer-small $spacer-tiny;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// Error (error)\r\n// ---------------------------------------------------------\r\n\r\nac-input-base.ac-input-base--error {\r\n  border-color: var-color(\"alert\", \"normal\");\r\n  background-color: white;\r\n\r\n  .ac-input__label {\r\n    color: var-color(\"alert\", \"normal\");\r\n  }\r\n\r\n  .ac-input__item-end {\r\n    & > ac-button .ac-button__native {\r\n      border-color: var-color(\"alert\", \"normal\");\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// Disabled (disabled)\r\n// ---------------------------------------------------------\r\n\r\nac-input-base.ac-input-base--disabled {\r\n  background-color: var-color(\"neutral\", \"lighter\");\r\n\r\n  input.ac-input__native {\r\n    color: var-color(\"neutral\", \"darker\");\r\n    cursor: not-allowed;\r\n  }\r\n\r\n  .ac-input__label {\r\n    color: var-color(\"neutral\", \"normal\");\r\n  }\r\n}\r\n\r\n// Browser is IE\r\n// ---------------------------------------------------------\r\n\r\n@include browser-ie {\r\n  ac-input-base {\r\n    .ac-input__item-start, .ac-input__item-end {\r\n      max-width: $ac-input-base--items-IE__max-width;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ---------------------------------------------------------------------------------------------------------------------\r\n// Theme Variations\r\n// ---------------------------------------------------------------------------------------------------------------------\r\n\r\n@include input-variations(\"primary\");\r\n@include input-variations(\"info\");\r\n@include input-variations(\"success\");\r\n@include input-variations(\"warning\");\r\n","import { Component, ComponentInterface, Element, Host, Method, Prop, State, h } from '@stencil/core';\r\n\r\nimport { Bind } from '../../../utils/lang/bind';\r\n\r\n/**\r\n * Accera's full-featured Input web-component.\r\n */\r\n@Component({\r\n  tag: 'ac-input-base',\r\n  styleUrl: 'ac-input-base.scss',\r\n})\r\nexport class AcInputBase implements ComponentInterface {\r\n  private nativeInput?: HTMLInputElement;\r\n\r\n  @Element() host: HTMLAcInputBaseElement;\r\n\r\n  /**\r\n   * The native HTMLInputElement name attribute.\r\n   */\r\n  @Prop() name: string;\r\n\r\n  /**\r\n   * The label text of the this input group.\r\n   */\r\n  @Prop() label: string;\r\n\r\n  /**\r\n   * Error mode.\r\n   */\r\n  @Prop({ reflect: true }) error: boolean;\r\n\r\n  /**\r\n   * The theme color defined in the color palette.\r\n   */\r\n  @Prop() theme = 'primary';\r\n\r\n  /**\r\n   * The input's size.\r\n   */\r\n  @Prop() size?: 'small' | 'large';\r\n\r\n  /**\r\n   * The value of the internal input.\r\n   */\r\n  @Prop({ mutable: true }) value: any;\r\n\r\n  /**\r\n   * The type of the internal input.\r\n   */\r\n  @Prop({ reflect: true }) type: string;\r\n\r\n  /**\r\n   * The native HTMLInputElement pattern attribute.\r\n   */\r\n  @Prop({ reflect: true }) pattern: string;\r\n\r\n  /**\r\n   * Enable readonly.\r\n   */\r\n  @Prop({ reflect: true }) readonly: boolean;\r\n\r\n  /**\r\n   * The HTMLInputElement disabled attribute.\r\n   */\r\n  @Prop({ reflect: true }) disabled: boolean;\r\n\r\n  /**\r\n   * The native HTMLInputElement required attribute.\r\n   */\r\n  @Prop({ reflect: true }) required: boolean;\r\n\r\n  /**\r\n   * The native HTMLInputElement max attribute.\r\n   */\r\n  @Prop({ reflect: true }) max: number;\r\n\r\n  /**\r\n   * The native HTMLInputElement maxlength attribute.\r\n   */\r\n  @Prop({ reflect: true }) maxlength: number;\r\n\r\n  /**\r\n   * The native HTMLInputElement min attribute.\r\n   */\r\n  @Prop({ reflect: true }) min: number;\r\n\r\n  /**\r\n   * The native HTMLInputElement min attribute.\r\n   */\r\n  @Prop({ reflect: true }) minlength: number;\r\n\r\n  /**\r\n   * The native HTMLInputElement autofocus attribute.\r\n   */\r\n  @Prop({ reflect: true }) autofocus: boolean;\r\n\r\n  /**\r\n   * The native HTMLInputElement autocomplete attribute.\r\n   */\r\n  @Prop({ reflect: true }) autocomplete: string;\r\n\r\n  /**\r\n   * The native HTMLInputElement autocapitalize attribute.\r\n   */\r\n  @Prop({ reflect: true }) autocapitalize: string;\r\n\r\n  /**\r\n   * The native HTMLInputElement placeholder attribute.\r\n   */\r\n  @Prop({ reflect: true }) placeholder: string;\r\n\r\n  /**\r\n   * The native HTMLInputElement step attribute.\r\n   */\r\n  @Prop({ reflect: true }) step: number;\r\n\r\n  @State() hasFocus: boolean;\r\n\r\n  @Method()\r\n  async getNativeInput() {\r\n    return this.nativeInput;\r\n  }\r\n\r\n  /**\r\n   * Set focus state in the native input.\r\n   */\r\n  @Method()\r\n  async setFocus() {\r\n    this.nativeInput.focus();\r\n  }\r\n\r\n  @Bind\r\n  private handleFocus() {\r\n    // @TODO: Check why events handled by stencil dont propagate itself. So, create a decorator that wrapper this line.\r\n    this.host.dispatchEvent(new Event('focus'));\r\n    this.hasFocus = true;\r\n  }\r\n\r\n  @Bind\r\n  private handleBlur() {\r\n    this.hasFocus = false;\r\n  }\r\n\r\n  @Bind\r\n  private handleChange() {\r\n    this.value = this.nativeInput.value;\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Host\r\n        class={{\r\n          [`ac-input-base--${this.theme}`]: !!this.theme,\r\n          [`ac-input-base--${this.size}`]: !!this.size,\r\n          'ac-input-base--filled': !!this.value && this.value !== '',\r\n          'ac-input-base--no-label': !this.label,\r\n          'ac-input-base--disabled': this.disabled,\r\n          'ac-input-base--error': this.error,\r\n          'ac-input-base--focus': this.hasFocus,\r\n        }}\r\n      >\r\n        <div class=\"ac-input__item-start\">\r\n          <slot name=\"item-start\"/>\r\n        </div>\r\n        <span class=\"ac-input__input-container\">\r\n        <label\r\n          class=\"ac-input__label\"\r\n        >\r\n          <slot name=\"input-label\"/>\r\n          {this.label}\r\n        </label>\r\n        <input\r\n          ref={input => this.nativeInput = input}\r\n          class=\"ac-input__native\"\r\n          name={this.name}\r\n          value={this.value}\r\n          type={this.type || 'text'}\r\n          pattern={this.pattern}\r\n          readonly={this.readonly}\r\n          disabled={this.disabled}\r\n          required={this.required}\r\n          max={this.max}\r\n          min={this.min}\r\n          maxlength={this.maxlength}\r\n          minlength={this.minlength}\r\n          autofocus={this.autofocus}\r\n          autocomplete={this.autocomplete}\r\n          autocapitalize={this.autocapitalize}\r\n          placeholder={this.placeholder}\r\n          onChange={this.handleChange}\r\n          onFocus={this.handleFocus}\r\n          onBlur={this.handleBlur}\r\n          step={this.type === 'number' ? this.step || '0.00000000000001' : undefined}\r\n        />\r\n      </span>\r\n        <div class=\"ac-input__item-end\">\r\n          <slot name=\"item-end\"/>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"6FAAA,MAAMA,EAAiB,spI,iXCWVC,EAAW,M,kGAuBN,U,8YAqFhBC,uBACE,OAAOC,KAAKC,W,CAOdF,iBACEC,KAAKC,YAAYC,O,CAIXC,cAENH,KAAKI,KAAKC,cAAc,IAAIC,MAAM,UAClCN,KAAKO,SAAW,I,CAIVC,aACNR,KAAKO,SAAW,K,CAIVE,eACNT,KAAKU,MAAQV,KAAKC,YAAYS,K,CAGhCC,SAEE,OACEC,EAACC,EAAI,CACHC,MAAO,CACL,CAAC,kBAAkBd,KAAKe,WAAYf,KAAKe,MACzC,CAAC,kBAAkBf,KAAKgB,UAAWhB,KAAKgB,KACxC,0BAA2BhB,KAAKU,OAASV,KAAKU,QAAU,GACxD,2BAA4BV,KAAKiB,MACjC,0BAA2BjB,KAAKkB,SAChC,uBAAwBlB,KAAKmB,MAC7B,uBAAwBnB,KAAKO,WAG/BK,EAAA,OAAKE,MAAM,wBACTF,EAAA,QAAMQ,KAAK,gBAEbR,EAAA,QAAME,MAAM,6BACZF,EAAA,SACEE,MAAM,mBAENF,EAAA,QAAMQ,KAAK,gBACVpB,KAAKiB,OAERL,EAAA,SACES,IAAKC,GAAStB,KAAKC,YAAcqB,EACjCR,MAAM,mBACNM,KAAMpB,KAAKoB,KACXV,MAAOV,KAAKU,MACZa,KAAMvB,KAAKuB,MAAQ,OACnBC,QAASxB,KAAKwB,QACdC,SAAUzB,KAAKyB,SACfP,SAAUlB,KAAKkB,SACfQ,SAAU1B,KAAK0B,SACfC,IAAK3B,KAAK2B,IACVC,IAAK5B,KAAK4B,IACVC,UAAW7B,KAAK6B,UAChBC,UAAW9B,KAAK8B,UAChBC,UAAW/B,KAAK+B,UAChBC,aAAchC,KAAKgC,aACnBC,eAAgBjC,KAAKiC,eACrBC,YAAalC,KAAKkC,YAClBC,SAAUnC,KAAKS,aACf2B,QAASpC,KAAKG,YACdkC,OAAQrC,KAAKQ,WACb8B,KAAMtC,KAAKuB,OAAS,SAAWvB,KAAKsC,MAAQ,mBAAqBC,aAGnE3B,EAAA,OAAKE,MAAM,sBACTF,EAAA,QAAMQ,KAAK,c,6BAjEXoB,EAAA,CADPC,G,gCAQOD,EAAA,CADPC,G,+BAMOD,EAAA,CADPC,G"}