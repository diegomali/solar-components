{"version":3,"names":["ScrollManager","static","e","window","event","preventDefault","returnValue","keys","keyCode","all","this","isDisabled","isDisabledForAll","document","querySelector","style","height","overflow","preventDefaultForScrollKeys","addEventListener","onwheel","onmousewheel","ontouchmove","onkeydown","removeEventListener"],"sources":["./src/utils/scroll-manager.ts"],"sourcesContent":["/**\n * Controls the state of scroll actions.\n * Thanks to @galambalazs.\n */\nexport class ScrollManager {\n\n  static isDisabled = false;\n  static isDisabledForAll: boolean;\n\n  /**\n   * A map object that list, enable/disable each keys that manipulate the scroll into the window.\n   * left: 37, up: 38, right: 39, down: 40,\n   * spacebar: 32, pageup: 33, pagedown: 34, end: 35, home: 36\n   */\n  static keys = {\n    37: 1,\n    38: 1,\n    39: 1,\n    40: 1,\n    32: 1,\n    33: 1,\n    34: 1\n  };\n\n  static preventDefault(e) {\n    e = e || window.event;\n    if (e.preventDefault) {\n      e.preventDefault();\n    }\n    e.returnValue = false;\n  }\n\n  static preventDefaultForScrollKeys(e) {\n    if (ScrollManager.keys[e.keyCode]) {\n      ScrollManager.preventDefault(e);\n      return false;\n    }\n  }\n\n  /**\n   * Override the main listeners, disabling the scroll for each enabled key in `keys` object.\n   * Also, set `height: 100vh` and `overflow: hidden` in the `html` element, forcing the content size to match\n   * with the window.\n   * @param all Disable the scroll for the browser.\n   */\n  static disable(all?: boolean) {\n    this.isDisabled = true;\n    this.isDisabledForAll = all;\n\n    document.querySelector('html').style.height = '100vh';\n    document.querySelector('html').style.overflow = 'hidden';\n\n    if (all) {\n      const preventDefault = ScrollManager.preventDefault;\n      const preventDefaultForScrollKeys = ScrollManager.preventDefaultForScrollKeys;\n      if (window.addEventListener) { // older FF\n        window.addEventListener('DOMMouseScroll', preventDefault, false);\n      }\n      window.onwheel = preventDefault; // modern standard\n      (window as any).onmousewheel = (document as any).onmousewheel = preventDefault; // older browsers, IE\n      window.ontouchmove = preventDefault; // mobile\n      document.onkeydown = preventDefaultForScrollKeys;\n    }\n  }\n\n  /**\n   * Reset the main listeners, enabling the scroll.\n   * Also reset the html element styles assigned before in `disable` function.\n   */\n  static enable() {\n    this.isDisabled = false;\n    this.isDisabledForAll = false;\n\n    document.querySelector('html').style.height = '';\n    document.querySelector('html').style.overflow = '';\n\n    if (this.isDisabledForAll) {\n      if (window.removeEventListener) {\n        window.removeEventListener('DOMMouseScroll', ScrollManager.preventDefault, false);\n      }\n      (window as any).onmousewheel = (document as any).onmousewheel = null;\n      window.onwheel = null;\n      window.ontouchmove = null;\n      document.onkeydown = null;\n    }\n  }\n}\n"],"mappings":"AAIA,MAAaA,EAoBXC,sBAAsBC,GACpBA,EAAIA,GAAKC,OAAOC,MAChB,GAAIF,EAAEG,eAAgB,CACpBH,EAAEG,gB,CAEJH,EAAEI,YAAc,K,CAGlBL,mCAAmCC,GACjC,GAAIF,EAAcO,KAAKL,EAAEM,SAAU,CACjCR,EAAcK,eAAeH,GAC7B,OAAO,K,EAUXD,eAAeQ,GACbC,KAAKC,WAAa,KAClBD,KAAKE,iBAAmBH,EAExBI,SAASC,cAAc,QAAQC,MAAMC,OAAS,QAC9CH,SAASC,cAAc,QAAQC,MAAME,SAAW,SAEhD,GAAIR,EAAK,CACP,MAAMJ,EAAiBL,EAAcK,eACrC,MAAMa,EAA8BlB,EAAckB,4BAClD,GAAIf,OAAOgB,iBAAkB,CAC3BhB,OAAOgB,iBAAiB,iBAAkBd,EAAgB,M,CAE5DF,OAAOiB,QAAUf,EAChBF,OAAekB,aAAgBR,SAAiBQ,aAAehB,EAChEF,OAAOmB,YAAcjB,EACrBQ,SAASU,UAAYL,C,EAQzBjB,gBACES,KAAKC,WAAa,MAClBD,KAAKE,iBAAmB,MAExBC,SAASC,cAAc,QAAQC,MAAMC,OAAS,GAC9CH,SAASC,cAAc,QAAQC,MAAME,SAAW,GAEhD,GAAIP,KAAKE,iBAAkB,CACzB,GAAIT,OAAOqB,oBAAqB,CAC9BrB,OAAOqB,oBAAoB,iBAAkBxB,EAAcK,eAAgB,M,CAE5EF,OAAekB,aAAgBR,SAAiBQ,aAAe,KAChElB,OAAOiB,QAAU,KACjBjB,OAAOmB,YAAc,KACrBT,SAASU,UAAY,I,GA7ElBvB,EAAAW,WAAa,MAQbX,EAAAO,KAAO,CACZ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,U"}