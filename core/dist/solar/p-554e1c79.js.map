{"version":3,"names":["createControllerPortal","controllerRef","portal","TargetTag","props","children","ref","refCallback","reset","onDidDismiss","restProps","__rest","create","Object","assign","render","Tag","h","then","elt","parentElement","vchildren","forceUpdate","remove","ensureController","controllerName","controller","document","querySelector","isNil","createElement","body","appendChild"],"sources":["./src/behaviors/controller-behavior/create-controller-portal.tsx","./src/utils/stencil/ensure-controller.ts"],"sourcesContent":["import { FunctionalComponent, VNode, h } from '@stencil/core';\r\n\r\nimport { ControlledElementFields, ControllerComponentOptions } from './controller-behavior';\r\n\r\n/**\r\n * Used to create a Component that dispatch a ControllerComponent#set directly from a render tree.\r\n * This will pass the vchildren as a render function to the controller to render it through the portal.\r\n * @param controllerRef The reference of the controller element to dispatch.\r\n */\r\nexport function createControllerPortal<C>(controllerRef)\r\n  : FunctionalComponent<ControllerComponentOptions<C> & ControlledElementFields> {\r\n\r\n  // Controls the host created by the controller.\r\n  let portal;\r\n  let TargetTag;\r\n\r\n  return (props: ControllerComponentOptions<C> & ControlledElementFields | any, children: VNode | VNode[]) => {\r\n    const { ref: refCallback, reset, onDidDismiss, ...restProps } = props;\r\n\r\n    if (!portal && !reset) {\r\n      controllerRef.create({\r\n          ...props,\r\n          render: ({ ref, Tag }) => {\r\n            TargetTag = Tag;\r\n            return <TargetTag {...restProps} ref={ref}>{children}</TargetTag>;\r\n          }\r\n        })\r\n        .then(elt => {\r\n          if (refCallback) { refCallback(elt); }\r\n          portal = elt.parentElement;\r\n        });\r\n    } else if (!reset) {\r\n      portal.vchildren = <TargetTag {...restProps}>{children}</TargetTag>;\r\n      portal.forceUpdate();\r\n    } else {\r\n      // Clears the host if the reset prop is true\r\n      if (portal) {\r\n        if (onDidDismiss) {\r\n          onDidDismiss();\r\n        }\r\n        portal.remove();\r\n        portal = null;\r\n      }\r\n    }\r\n\r\n    // void component\r\n    return null;\r\n  };\r\n}\r\n","import { isNil } from 'ramda';\r\n\r\nexport const  ensureController = controllerName => {\r\n  let controller: HTMLElement = document.querySelector(controllerName);\r\n  if (isNil(controller)) {\r\n    controller = document.createElement(controllerName);\r\n    document.body.appendChild(controller);\r\n  }\r\n  return controller;\r\n}"],"mappings":"+bASgBA,EAA0BC,GAIxC,IAAIC,EACJ,IAAIC,EAEJ,MAAO,CAACC,EAAsEC,KAC5E,MAAQC,IAAKC,EAAWC,MAAEA,EAAKC,aAAEA,GAA+BL,EAAdM,EAASC,EAAKP,EAA1D,gCAEN,IAAKF,IAAWM,EAAO,CACrBP,EAAcW,OAAMC,OAAAC,OAAAD,OAAAC,OAAA,GACbV,GAAK,CACRW,OAAQ,EAAGT,MAAKU,UACdb,EAAYa,EACZ,OAAOC,EAACd,EAASU,OAAAC,OAAA,GAAKJ,EAAS,CAAEJ,IAAKA,IAAMD,EAAqB,KAGpEa,MAAKC,IACJ,GAAIZ,EAAa,CAAEA,EAAYY,E,CAC/BjB,EAASiB,EAAIC,aAAa,G,MAEzB,IAAKZ,EAAO,CACjBN,EAAOmB,UAAYJ,EAACd,EAASU,OAAAC,OAAA,GAAKJ,GAAYL,GAC9CH,EAAOoB,a,KACF,CAEL,GAAIpB,EAAQ,CACV,GAAIO,EAAc,CAChBA,G,CAEFP,EAAOqB,SACPrB,EAAS,I,EAKb,OAAO,IAAI,CAEf,C,MC9CcsB,EAAmBC,IAC/B,IAAIC,EAA0BC,SAASC,cAAcH,GACrD,GAAII,EAAMH,GAAa,CACrBA,EAAaC,SAASG,cAAcL,GACpCE,SAASI,KAAKC,YAAYN,E,CAE5B,OAAOA,CAAU,S"}