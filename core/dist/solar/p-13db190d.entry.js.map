{"version":3,"names":["root","factory","module","exports","this","DIGIT","ALPHA","ALPHANUM","BY_PASS_KEYS","isAllowedKeyCode","keyCode","i","len","length","mergeMoneyOptions","opts","delimiter","lastOutput","precision","hasOwnProperty","separator","showSignal","suffixUnit","replace","unit","zeroCents","moneyPrecision","addPlaceholdersToOutput","output","index","placeholder","VanillaMasker","elements","prototype","unbindElementToMask","onkeyup","onkeydown","value","bindElementToMask","maskFunction","that","onType","e","window","event","source","target","srcElement","setTimeout","VMasker","setSelectionRange","maskMoney","maskNumber","maskAlphaNum","maskPattern","pattern","unMask","el","Error","toMoney","zeroMatcher","zeroRegExp","RegExp","digitsLength","toString","lastDigitLength","slice","number","clearDelimiter","clearSeparator","money","substr","masked","cents","Array","join","signal","startsWith","beginCents","centsValue","centsLength","centsSliced","toPattern","patternChars","split","values","charsValues","outputLength","undefined","match","toNumber","toAlphaNumeric","acInputCss","AcInput","formFieldBehavior","FormFieldBehavior","errorDidUpdate","error","acInputBase","setInvalid","setValid","valueDidUpdate","mask","vanillaMasker","async","getRawValue","type","validateOnKeyup","checkValidity","getNativeFormField","setDirty","getNativeInput","setFocus","disconnectedCallback","togglePassword","isShowingPassword","handleChange","handleBlur","setTouched","render","icon","faEyeSlash","faEye","h","ref","label","name","disabled","required","max","min","maxlength","minlength","step","autofocus","autocomplete","autocapitalize","onChange","onBlur","slot","onClick","fill","AcFaIcon","size","helperText","class","__decorate","Bind"],"sources":["./node_modules/vanilla-masker/lib/vanilla-masker.js","./src/components/molecules/ac-input/ac-input.scss?tag=ac-input","./src/components/molecules/ac-input/ac-input.tsx"],"sourcesContent":["(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.VMasker = factory();\n  }\n}(this, function() {\n  var DIGIT = \"9\",\n      ALPHA = \"A\",\n      ALPHANUM = \"S\",\n      BY_PASS_KEYS = [9, 16, 17, 18, 36, 37, 38, 39, 40, 91, 92, 93],\n      isAllowedKeyCode = function(keyCode) {\n        for (var i = 0, len = BY_PASS_KEYS.length; i < len; i++) {\n          if (keyCode == BY_PASS_KEYS[i]) {\n            return false;\n          }\n        }\n        return true;\n      },\n      mergeMoneyOptions = function(opts) {\n        opts = opts || {};\n        opts = {\n          delimiter: opts.delimiter || \".\",\n          lastOutput: opts.lastOutput,\n          precision: opts.hasOwnProperty(\"precision\") ? opts.precision : 2,\n          separator: opts.separator || \",\",\n          showSignal: opts.showSignal,\n          suffixUnit: opts.suffixUnit && (\" \" + opts.suffixUnit.replace(/[\\s]/g,'')) || \"\",\n          unit: opts.unit && (opts.unit.replace(/[\\s]/g,'') + \" \") || \"\",\n          zeroCents: opts.zeroCents\n        };\n        opts.moneyPrecision = opts.zeroCents ? 0 : opts.precision;\n        return opts;\n      },\n      // Fill wildcards past index in output with placeholder\n      addPlaceholdersToOutput = function(output, index, placeholder) {\n        for (; index < output.length; index++) {\n          if(output[index] === DIGIT || output[index] === ALPHA || output[index] === ALPHANUM) {\n            output[index] = placeholder;\n          }\n        }\n        return output;\n      }\n  ;\n\n  var VanillaMasker = function(elements) {\n    this.elements = elements;\n  };\n\n  VanillaMasker.prototype.unbindElementToMask = function() {\n    for (var i = 0, len = this.elements.length; i < len; i++) {\n      this.elements[i].lastOutput = \"\";\n      this.elements[i].onkeyup = false;\n      this.elements[i].onkeydown = false;\n\n      if (this.elements[i].value.length) {\n        this.elements[i].value = this.elements[i].value.replace(/\\D/g, '');\n      }\n    }\n  };\n\n  VanillaMasker.prototype.bindElementToMask = function(maskFunction) {\n    var that = this,\n        onType = function(e) {\n          e = e || window.event;\n          var source = e.target || e.srcElement;\n\n          if (isAllowedKeyCode(e.keyCode)) {\n            setTimeout(function() {\n              that.opts.lastOutput = source.lastOutput;\n              source.value = VMasker[maskFunction](source.value, that.opts);\n              source.lastOutput = source.value;\n              if (source.setSelectionRange && that.opts.suffixUnit) {\n                source.setSelectionRange(source.value.length, (source.value.length - that.opts.suffixUnit.length));\n              }\n            }, 0);\n          }\n        }\n    ;\n    for (var i = 0, len = this.elements.length; i < len; i++) {\n      this.elements[i].lastOutput = \"\";\n      this.elements[i].onkeyup = onType;\n      if (this.elements[i].value.length) {\n        this.elements[i].value = VMasker[maskFunction](this.elements[i].value, this.opts);\n      }\n    }\n  };\n\n  VanillaMasker.prototype.maskMoney = function(opts) {\n    this.opts = mergeMoneyOptions(opts);\n    this.bindElementToMask(\"toMoney\");\n  };\n\n  VanillaMasker.prototype.maskNumber = function() {\n    this.opts = {};\n    this.bindElementToMask(\"toNumber\");\n  };\n  \n  VanillaMasker.prototype.maskAlphaNum = function() {\n    this.opts = {};\n    this.bindElementToMask(\"toAlphaNumeric\");\n  };\n\n  VanillaMasker.prototype.maskPattern = function(pattern) {\n    this.opts = {pattern: pattern};\n    this.bindElementToMask(\"toPattern\");\n  };\n\n  VanillaMasker.prototype.unMask = function() {\n    this.unbindElementToMask();\n  };\n\n  var VMasker = function(el) {\n    if (!el) {\n      throw new Error(\"VanillaMasker: There is no element to bind.\");\n    }\n    var elements = (\"length\" in el) ? (el.length ? el : []) : [el];\n    return new VanillaMasker(elements);\n  };\n\n  VMasker.toMoney = function(value, opts) {\n    opts = mergeMoneyOptions(opts);\n    if (opts.zeroCents) {\n      opts.lastOutput = opts.lastOutput || \"\";\n      var zeroMatcher = (\"(\"+ opts.separator +\"[0]{0,\"+ opts.precision +\"})\"),\n          zeroRegExp = new RegExp(zeroMatcher, \"g\"),\n          digitsLength = value.toString().replace(/[\\D]/g, \"\").length || 0,\n          lastDigitLength = opts.lastOutput.toString().replace(/[\\D]/g, \"\").length || 0\n      ;\n      value = value.toString().replace(zeroRegExp, \"\");\n      if (digitsLength < lastDigitLength) {\n        value = value.slice(0, value.length - 1);\n      }\n    }\n    var number = value.toString().replace(/[\\D]/g, \"\"),\n        clearDelimiter = new RegExp(\"^(0|\\\\\"+ opts.delimiter +\")\"),\n        clearSeparator = new RegExp(\"(\\\\\"+ opts.separator +\")$\"),\n        money = number.substr(0, number.length - opts.moneyPrecision),\n        masked = money.substr(0, money.length % 3),\n        cents = new Array(opts.precision + 1).join(\"0\")\n    ;\n    money = money.substr(money.length % 3, money.length);\n    for (var i = 0, len = money.length; i < len; i++) {\n      if (i % 3 === 0) {\n        masked += opts.delimiter;\n      }\n      masked += money[i];\n    }\n    masked = masked.replace(clearDelimiter, \"\");\n    masked = masked.length ? masked : \"0\";\n    var signal = \"\";\n    if(opts.showSignal === true) {\n      signal = value < 0 || (value.startsWith && value.startsWith('-')) ? \"-\" :  \"\";\n    }\n    if (!opts.zeroCents) {\n      var beginCents = number.length - opts.precision,\n          centsValue = number.substr(beginCents, opts.precision),\n          centsLength = centsValue.length,\n          centsSliced = (opts.precision > centsLength) ? opts.precision : centsLength\n      ;\n      cents = (cents + centsValue).slice(-centsSliced);\n    }\n    var output = opts.unit + signal + masked + opts.separator + cents;\n    return output.replace(clearSeparator, \"\") + opts.suffixUnit;\n  };\n\n  VMasker.toPattern = function(value, opts) {\n    var pattern = (typeof opts === 'object' ? opts.pattern : opts),\n        patternChars = pattern.replace(/\\W/g, ''),\n        output = pattern.split(\"\"),\n        values = value.toString().replace(/\\W/g, \"\"),\n        charsValues = values.replace(/\\W/g, ''),\n        index = 0,\n        i,\n        outputLength = output.length,\n        placeholder = (typeof opts === 'object' ? opts.placeholder : undefined)\n    ;\n    \n    for (i = 0; i < outputLength; i++) {\n      // Reached the end of input\n      if (index >= values.length) {\n        if (patternChars.length == charsValues.length) {\n          return output.join(\"\");\n        }\n        else if ((placeholder !== undefined) && (patternChars.length > charsValues.length)) {\n          return addPlaceholdersToOutput(output, i, placeholder).join(\"\");\n        }\n        else {\n          break;\n        }\n      }\n      // Remaining chars in input\n      else{\n        if ((output[i] === DIGIT && values[index].match(/[0-9]/)) ||\n            (output[i] === ALPHA && values[index].match(/[a-zA-Z]/)) ||\n            (output[i] === ALPHANUM && values[index].match(/[0-9a-zA-Z]/))) {\n          output[i] = values[index++];\n        } else if (output[i] === DIGIT || output[i] === ALPHA || output[i] === ALPHANUM) {\n          if(placeholder !== undefined){\n            return addPlaceholdersToOutput(output, i, placeholder).join(\"\");\n          }\n          else{\n            return output.slice(0, i).join(\"\");\n          }\n        }\n      }\n    }\n    return output.join(\"\").substr(0, i);\n  };\n\n  VMasker.toNumber = function(value) {\n    return value.toString().replace(/(?!^-)[^0-9]/g, \"\");\n  };\n  \n  VMasker.toAlphaNumeric = function(value) {\n    return value.toString().replace(/[^a-z0-9 ]+/i, \"\");\n  };\n\n  return VMasker;\n}));\n","@import \"../../../theme/variables\";\r\n\r\n// ---------------------------------------------------------------------------------------------------------------------\r\n// General Style\r\n// ---------------------------------------------------------------------------------------------------------------------\r\n\r\nac-input {\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  .ac-input__helper-text {\r\n    display: block;\r\n    margin-top: $spacer-tiny;\r\n    color: var-color(\"neutral\", \"dark\");\r\n    font-size: $font-tiny;\r\n  }\r\n}\r\n\r\n\r\n// ---------------------------------------------------------------------------------------------------------------------\r\n// State Modifiers\r\n// ---------------------------------------------------------------------------------------------------------------------\r\n\r\n// Error mode (FormFieldBehavior)\r\n// --------------------------------------------------\r\n\r\nac-input.form-field--invalid {\r\n  .ac-input__helper-text {\r\n    color: var-color(\"alert\", \"normal\");\r\n  }\r\n}\r\n","import { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { Component, Element, Listen, Method, Prop, State, Watch, h } from '@stencil/core';\r\nimport vanillaMasker from 'vanilla-masker';\r\n\r\nimport { FormFieldBehavior, FormFieldComponent } from '../../../behaviors/form-behavior';\r\nimport { Bind } from '../../../utils/lang/bind';\r\nimport { CustomValidityState, ValidatorFn } from '../../../utils/validations/validations';\r\nimport { AcFaIcon } from '../../utils/ac-fa-icon';\r\n\r\n/**\r\n * Accera's full-featured Input Field web-component.\r\n */\r\n@Component({\r\n  tag: 'ac-input',\r\n  styleUrl: 'ac-input.scss',\r\n})\r\nexport class AcInput implements FormFieldComponent {\r\n  private acInputBase: HTMLAcInputBaseElement;\r\n\r\n  @Element() host: HTMLAcInputElement;\r\n\r\n  /**\r\n   * The FormFieldBehavior instance.\r\n   */\r\n  formFieldBehavior = new FormFieldBehavior(this);\r\n\r\n  /**\r\n   * The label text of the this input group.\r\n   */\r\n  @Prop() label: string;\r\n\r\n  /**\r\n   * The type of the internal input.\r\n   */\r\n  @Prop() type: string;\r\n\r\n  /**\r\n   * The helper text to guide the user.\r\n   */\r\n  @Prop() helperText: string;\r\n\r\n  /**\r\n   * Request check validation on each input key event.\r\n   */\r\n  @Prop() validateOnKeyup: boolean;\r\n\r\n  /**\r\n   * The value of the internal input.\r\n   */\r\n  @Prop({ mutable: true }) value: any;\r\n\r\n  /**\r\n   * Set the component in the error state with a message.\r\n   */\r\n  @Prop({ mutable: true }) error: string | boolean;\r\n\r\n  /**\r\n   * Get the last validity state from the checkValidity.\r\n   */\r\n  @Prop({ mutable: true }) validity: CustomValidityState;\r\n\r\n  /**\r\n   * The validations that this field need.\r\n   * This validations are checked on:\r\n   * - Blur event\r\n   * - Form submit event\r\n   * - Each keyUp event ONLY IF the validateOnKeyup property is present.\r\n   */\r\n  @Prop({ mutable: true }) validator: ValidatorFn | ValidatorFn[];\r\n\r\n  /**\r\n   * The mask of the input.\r\n   */\r\n  @Prop({ reflect: true }) mask: string;\r\n\r\n  /**\r\n   * The HTML input field's name.\r\n   */\r\n  @Prop({ reflect: true }) name: string;\r\n\r\n  /**\r\n   * The disabled mode.\r\n   */\r\n  @Prop({ reflect: true }) disabled: boolean;\r\n\r\n  /**\r\n   * The native HTMLInputElement required attribute.\r\n   */\r\n  @Prop({ reflect: true }) required: boolean;\r\n\r\n  /**\r\n   * The native HTMLInputElement pattern attribute.\r\n   */\r\n  @Prop({ reflect: true }) pattern: string;\r\n\r\n  /**\r\n   * The native HTMLInputElement max attribute.\r\n   */\r\n  @Prop({ reflect: true }) max: number;\r\n\r\n  /**\r\n   * The native HTMLInputElement maxlength attribute.\r\n   */\r\n  @Prop({ reflect: true }) maxlength: number;\r\n\r\n  /**\r\n   * The native HTMLInputElement min attribute.\r\n   */\r\n  @Prop({ reflect: true }) min: number;\r\n\r\n  /**\r\n   * The native HTMLInputElement min attribute.\r\n   */\r\n  @Prop({ reflect: true }) minlength: number;\r\n\r\n  /**\r\n   * The native HTMLInputElement autofocus attribute.\r\n   */\r\n  @Prop({ reflect: true }) autofocus: boolean;\r\n\r\n  /**\r\n   * The native HTMLInputElement autocomplete attribute.\r\n   */\r\n  @Prop({ reflect: true }) autocomplete: string;\r\n\r\n  /**\r\n   * The native HTMLInputElement autocapitalize attribute.\r\n   */\r\n  @Prop({ reflect: true }) autocapitalize: string;\r\n\r\n  /**\r\n   * The native HTMLInputElement placeholder attribute.\r\n   */\r\n  @Prop({ reflect: true }) placeholder: string;\r\n\r\n  /**\r\n   * The native HTMLInputElement step attribute.\r\n   */\r\n  @Prop({ reflect: true }) step: number;\r\n\r\n  /**\r\n   * Used to toggle the password view.\r\n   */\r\n  @State() isShowingPassword: boolean;\r\n\r\n  /**\r\n   * Set the error state based on the error prop.\r\n   * @param error An error message.\r\n   */\r\n  @Watch('error')\r\n  errorDidUpdate(error) {\r\n    if (error) {\r\n      if (error === 'true') {\r\n        this.error = true;\r\n      }\r\n      this.acInputBase.error = true;\r\n      this.formFieldBehavior.setInvalid();\r\n    } else {\r\n      this.acInputBase.error = false;\r\n      this.formFieldBehavior.setValid();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Applies transformations when the value update.\r\n   */\r\n  @Watch('value')\r\n  valueDidUpdate() {\r\n    // Masking when value update programmatically\r\n    if (this.value && this.mask) {\r\n      this.value = vanillaMasker.toPattern(this.value, this.mask);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Applies transformations when the mask update.\r\n   */\r\n  @Watch('mask')\r\n  async maskDidUpdate() {\r\n    // Masking when value update programmatically\r\n    if (this.value) {\r\n      this.value = this.mask ? vanillaMasker.toPattern(this.value, this.mask) : await this.getRawValue(this.type);\r\n    }\r\n  }\r\n\r\n  @Listen('keyup')\r\n  async handleKeyup() {\r\n    if (this.validateOnKeyup) {\r\n      this.formFieldBehavior.checkValidity((await this.getNativeFormField()).value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the value and run validations as if the user change it manually.\r\n   * When to use each:\r\n   * input.value will only update the value, useful to set the initial value of the input.\r\n   * input.setValue is useful to use values that are automatically set by an user's action, setting the unchecked state\r\n   * to the form.\r\n   */\r\n  @Method()\r\n  async setValue(value) {\r\n    this.value = value;\r\n\r\n    // @TODO: Review how to set the dirty state in the form for programmatically value changes.\r\n    this.formFieldBehavior.setDirty();\r\n    this.formFieldBehavior.checkValidity();\r\n  }\r\n\r\n  /**\r\n   * Get the unmasked value.\r\n   */\r\n  @Method()\r\n  async getRawValue(type = 'text') {\r\n    const value = (await this.acInputBase.getNativeInput()).value || this.value;\r\n    if (!value) { return null; }\r\n    if (type === 'text') {\r\n      return value.toString().replace(/[^a-z0-9 ]+/ig, '');\r\n    } else {\r\n      return vanillaMasker.toNumber(value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set focus state in the native input.\r\n   */\r\n  @Method()\r\n  async setFocus() {\r\n    return this.acInputBase.setFocus();\r\n  }\r\n\r\n  @Method()\r\n  async getNativeFormField() {\r\n    return this.acInputBase.getNativeInput();\r\n  }\r\n\r\n  @Method()\r\n  async getFormFieldBehavior() {\r\n    return this.formFieldBehavior;\r\n  }\r\n\r\n  async componentDidLoad() {\r\n    this.errorDidUpdate(this.error);\r\n    if (this.mask) {\r\n      vanillaMasker(await this.acInputBase.getNativeInput()).maskPattern(this.mask);\r\n      // Masking the initial value\r\n      if (this.value) {\r\n        this.value = vanillaMasker.toPattern(this.value, this.mask);\r\n      }\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {}\r\n\r\n  /**\r\n   * Toggle the password view.\r\n   */\r\n  @Bind\r\n  private togglePassword() {\r\n    this.isShowingPassword = !this.isShowingPassword;\r\n  }\r\n\r\n  /**\r\n   * Used as a listener to the change event. Dispatch form field validations.\r\n   */\r\n  @Bind\r\n  private handleChange() {\r\n    this.value = this.acInputBase.value;\r\n\r\n    this.formFieldBehavior.setDirty();\r\n    this.formFieldBehavior.checkValidity();\r\n  }\r\n\r\n  /**\r\n   * Used as a listener to the blur event. Dispatch form field validations.\r\n   */\r\n  @Bind\r\n  private handleBlur() {\r\n    this.formFieldBehavior.setTouched();\r\n  }\r\n\r\n  render() {\r\n    const icon = this.isShowingPassword ? faEyeSlash : faEye;\r\n    return [\r\n      <ac-input-base\r\n        ref={acInputBase => {\r\n          this.acInputBase = acInputBase as any;\r\n        }}\r\n        label={this.label}\r\n        name={this.name}\r\n        type={this.isShowingPassword ? 'text' : this.type}\r\n        pattern={this.pattern}\r\n        value={this.value}\r\n        disabled={this.disabled}\r\n        required={this.required}\r\n        max={this.max}\r\n        min={this.min}\r\n        maxlength={this.maxlength}\r\n        minlength={this.minlength}\r\n        step={this.step}\r\n        autofocus={this.autofocus}\r\n        autocomplete={this.autocomplete}\r\n        autocapitalize={this.autocapitalize}\r\n        onChange={this.handleChange}\r\n        onBlur={this.handleBlur}\r\n        placeholder={this.placeholder}\r\n      >\r\n        <slot name=\"item-start\" slot=\"item-start\" />\r\n        <slot name=\"input-label\" slot=\"input-label\" />\r\n        {this.type === 'password'\r\n          ? <ac-button slot=\"item-end\" onClick={this.togglePassword} icon-only fill=\"flat\">\r\n              <AcFaIcon icon={icon} size={14} />\r\n            </ac-button>\r\n          : <slot name=\"item-end\" slot=\"item-end\" />}\r\n      </ac-input-base>,\r\n\r\n      // Only present message if it is a string. Preventing unnecessary margin effect.\r\n      (this.error && typeof this.error === 'string') || (this.helperText && typeof this.helperText === 'string')\r\n        ? <span class=\"ac-input__helper-text\">\r\n            {this.error || this.helperText}\r\n          </span>\r\n        : null\r\n    ];\r\n  }\r\n}\r\n"],"mappings":"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"}